// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappion.Infrastructure;

#nullable disable

namespace Pappion.Infrastructure.Migrations
{
    [DbContext(typeof(PappionDbContext))]
    partial class PappionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b1ae366-9a07-4bed-b2b6-dcbd78bc7043"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083"),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            Text = "Увага! це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("8c8e7794-d783-4732-9fa1-bbfa3969a00e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            Text = "Джакузі з скінхедом це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("472960bb-9eb0-49b1-9e0d-36d372099715"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            Grade = 0m,
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            Text = "Масаж це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("82b61da4-aebf-4071-a77b-16dd3b4b926f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            Text = "Гаррі це дуже файний пацан! Стоп...",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("b987045d-b639-4542-afcd-eda7a4933edd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("b0bf0a6c-b8c0-48a3-ba82-17ed13cf72f2"),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            Text = "Незабутні враження від Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("a28c9278-42c7-4114-b7ee-11c52b03ccd0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("e0d94930-0578-405d-a218-6cda688bd778"),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("ca6bd045-571c-489b-a5cb-8beefbecebdd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("fbd8b343-ecd3-4695-b163-e7e12b7bbd0c"),
                            Grade = 0m,
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            Text = "Косметична процедура це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("95ac2d53-580e-431e-bbeb-ca5638deaf65"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            Text = "Еран це дуже файний пацан! Стоп...",
                            UserId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("89c3866d-4b3b-458d-8629-f3650bd2314a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("b089e754-41f3-4881-8fcb-848e4437a9b3"),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            Text = "Смаколики Карпатської кухні це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("7a79dd25-8dd6-46b3-bc1a-af21ce713d7f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("b0c0c9ba-1b00-474c-8a76-13e4e348f75e"),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("83c74cfa-73b0-4fd2-88b1-75650002776b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("e2d9525b-28c0-4827-8b90-ce4aec19db99"),
                            Grade = 0m,
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            Text = "Персональний тренер це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("4f43c652-7b99-44d8-a420-79966cdcbf76"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            Text = "Ґеральт це дуже файний пацан! Стоп...",
                            UserId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("044977bb-198d-4f0c-b843-fc99a667c8e5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("f35e555e-44b3-48ab-8d2e-98f86145e693"),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            Text = "Неймовірні пейзажі Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("0dd1206a-f55b-4dcd-91c3-fa81f17a1d03"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("b2dacf23-fdf2-4ae9-ba6f-824d35d8fcb0"),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            Text = "Вечірка вдома з настільними іграми це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("da6d4955-29fc-4a19-8940-993e5b5ff713"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("50d1fe9d-0328-4edc-a3c8-44a017a01f5b"),
                            Grade = 0m,
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            Text = "Ретельна манікюр і педикюр це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("5de59748-2bba-452a-a2c0-a6cf0461a1ed"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            Text = "Тайлер це дуже файний пацан! Стоп...",
                            UserId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("fe5a904b-e12a-4506-adbd-299150d13071"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("5b438114-8c0f-4595-8f47-3f53f572ac34"),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            Text = "Зимові пригоди у Карпатах це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("81fc31f1-54c1-4eab-ab45-897442d33740"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("f106260f-1c90-49a1-944d-59e2a0f49be2"),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            Text = "Концерт Rammstein це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("71fb923f-fe80-4413-a270-1cd018ada140"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("ae0d69b4-e15a-441d-bd9e-2ee7be0629e7"),
                            Grade = 0m,
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            Text = "Сеанс йоги це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("63452f27-9195-4dfb-9ee2-8ab37d4f7105"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            Text = "Біллі це дуже файний пацан! Стоп...",
                            UserId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Найкращі майстри масажу готові показати всі свої вміння на вашій задубілій спині.",
                            Price = 50.5m,
                            Rating = 0m,
                            Title = "Масаж"
                        },
                        new
                        {
                            Id = new Guid("fbd8b343-ecd3-4695-b163-e7e12b7bbd0c"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Отримайте розкішну косметичну процедуру, яка підкреслить вашу природну красу і зробить вашу шкіру сяючою.",
                            Price = 80.0m,
                            Rating = 0m,
                            Title = "Косметична процедура"
                        },
                        new
                        {
                            Id = new Guid("e2d9525b-28c0-4827-8b90-ce4aec19db99"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Досвідчений тренер допоможе вам досягнути ваших фітнес-цілей, розробивши індивідуальну тренувальну програму для вас.",
                            Price = 70.2m,
                            Rating = 0m,
                            Title = "Персональний тренер"
                        },
                        new
                        {
                            Id = new Guid("50d1fe9d-0328-4edc-a3c8-44a017a01f5b"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розкішний манікюр і педикюр, який зробить ваші нігті і ніжки неймовірно чудовими і доглянутими.",
                            Price = 45.8m,
                            Rating = 0m,
                            Title = "Ретельна манікюр і педикюр"
                        },
                        new
                        {
                            Id = new Guid("ae0d69b4-e15a-441d-bd9e-2ee7be0629e7"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розслабтеся і зосередьтеся на своєму тілі та розумі під час особистого сеансу йоги з досвідченим інструктором.",
                            Price = 55.3m,
                            Rating = 0m,
                            Title = "Сеанс йоги"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.Property<Guid>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("FavorId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FavorTags");

                    b.HasData(
                        new
                        {
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            TagId = new Guid("822d5ea4-b116-4cc6-a4ec-5d873cc01ff4")
                        },
                        new
                        {
                            FavorId = new Guid("fbd8b343-ecd3-4695-b163-e7e12b7bbd0c"),
                            TagId = new Guid("7da5fee9-3459-4967-a4fc-5216dc8800a7")
                        },
                        new
                        {
                            FavorId = new Guid("e2d9525b-28c0-4827-8b90-ce4aec19db99"),
                            TagId = new Guid("40f77412-864f-4293-8bf0-8f5c0c02530c")
                        },
                        new
                        {
                            FavorId = new Guid("50d1fe9d-0328-4edc-a3c8-44a017a01f5b"),
                            TagId = new Guid("73c4768a-ec00-4dd8-a205-3c5d19633809")
                        },
                        new
                        {
                            FavorId = new Guid("ae0d69b4-e15a-441d-bd9e-2ee7be0629e7"),
                            TagId = new Guid("b86de954-ec7c-4b93-90e7-00478e51e689")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e0a97c0-341e-4354-a111-631b9878e07f"),
                            Path = "cb7373e8-7616-49bb-a94c-13aa892ed8ee.png",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("0d3bce39-d309-4696-a2ff-120fd78d7d6a"),
                            Path = "9733c761-8212-4973-ad62-bd9d267cb662.png",
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083")
                        },
                        new
                        {
                            Id = new Guid("f80fbc0e-8942-483d-b21e-9ad386d2d334"),
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            Path = "ad78917a-6513-4940-a97f-153b55504448.png"
                        },
                        new
                        {
                            Id = new Guid("a9c35a63-bff3-4665-8981-4bbd70d088ef"),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            Path = "335044a3-65c1-4e2f-9406-f3541ea9cf01.png"
                        },
                        new
                        {
                            Id = new Guid("23fa92c2-50e0-4e1a-883c-96d2da0e712a"),
                            Path = "946f9cb2-d7df-4b33-8c3d-faba1e938992.png",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("689647e6-7171-4996-ab31-b9acf83b038d"),
                            Path = "34847184-0642-4c25-ae81-c8305b484d7b.png",
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083")
                        },
                        new
                        {
                            Id = new Guid("8381cb66-fbbe-4e81-a3f6-ba5d6cee30c4"),
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            Path = "e8010730-41f2-4526-9bbd-dae1eae2c99c.png"
                        },
                        new
                        {
                            Id = new Guid("86e6a3d7-eb55-4a86-b38c-a059faeb56a8"),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            Path = "1d56447d-b0f0-4de7-9b58-81690054f72a.png"
                        },
                        new
                        {
                            Id = new Guid("89d440f1-948e-4b2f-860a-88737fb0b1fd"),
                            Path = "d36f2242-3dfe-4491-a494-55d6fffec9a8.png",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("b76ab3c6-2442-493c-8a0b-4d0b3edde5cf"),
                            Path = "980e451f-c97c-4807-af5f-fa12df9104ac.png",
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083")
                        },
                        new
                        {
                            Id = new Guid("38b7d1d4-283e-4213-8c04-62cb30818ef1"),
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            Path = "18472e33-1eb3-4b09-8892-041a22d61d89.png"
                        },
                        new
                        {
                            Id = new Guid("a4573548-fb4f-4e09-8ed0-ecd511cb33bb"),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            Path = "6fb427d4-aaae-491e-8860-7e471c1e71ef.png"
                        },
                        new
                        {
                            Id = new Guid("375210f4-e71f-4763-8006-c6f29b742ac5"),
                            Path = "b98fe946-5d13-4781-b389-2c3e8da333e0.png",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("2423c911-c161-4606-a759-bc2ca36e4597"),
                            Path = "1b03b35a-990c-48c5-a77e-d00c32570a52.png",
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083")
                        },
                        new
                        {
                            Id = new Guid("05b9ac19-0308-4379-aa03-917bb76cfb10"),
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            Path = "ab384644-ec9e-4bf0-8e76-6446204d77df.png"
                        },
                        new
                        {
                            Id = new Guid("4227df7d-f2c1-4395-b294-1a5361d7075d"),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            Path = "8d1ddf68-3f20-4bbd-a4df-6c52df020c7a.png"
                        },
                        new
                        {
                            Id = new Guid("d8915b42-be50-42b5-b9cc-5925f32137ee"),
                            Path = "62f3c309-4212-49c9-8466-38fb2a8096f9.png",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("217ed1f7-82d8-44fd-a255-45920e60ada7"),
                            Path = "8e7f6dc0-6bef-4e01-a275-0839f0741dd5.png",
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083")
                        },
                        new
                        {
                            Id = new Guid("a53a77c9-8e45-482c-b7cd-f0b89cded87a"),
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            Path = "a9b35e70-01a3-4221-88cc-224751ea1b83.png"
                        },
                        new
                        {
                            Id = new Guid("23682aa4-9b25-4f21-98ed-21a142579b37"),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            Path = "14ad304b-7b47-4e9c-9949-7d024d67d9f9.png"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7fddd00-3709-4401-ad8e-c2a25c59bd77"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083"),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("6b5dc170-6aa0-4ee1-a9c0-a41c1f483956"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("3d27f1ff-c1fb-468d-94e1-636e7987888f"),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("48a4efb2-b5a4-4742-a10e-cc927030f86d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("0e0d19e1-d658-45a3-b1bb-3f291d46de1a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("6bba2562-8513-4108-95d7-e69aa28ec0d9"),
                            CommentId = new Guid("4b1ae366-9a07-4bed-b2b6-dcbd78bc7043"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("243ebb3a-ba07-4de2-b763-67aef7c14708"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("b0bf0a6c-b8c0-48a3-ba82-17ed13cf72f2"),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("19426836-ffa9-47ef-90f7-2fc7571181c4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("fbd8b343-ecd3-4695-b163-e7e12b7bbd0c"),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("7d66d831-aa37-4218-8f20-337c28588dc9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("e0d94930-0578-405d-a218-6cda688bd778"),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("f13adedf-1195-42cb-997b-064d43628589"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            UserId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("6978ba43-0bb8-4c0e-a9a4-ca05f4f2bdf6"),
                            CommentId = new Guid("8c8e7794-d783-4732-9fa1-bbfa3969a00e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("050cf4ad-b16a-449c-a073-076a798cf551"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("b089e754-41f3-4881-8fcb-848e4437a9b3"),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("ea0538dc-0b3c-47df-ab77-09639ff7f400"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("e2d9525b-28c0-4827-8b90-ce4aec19db99"),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("0f837b72-b780-4478-a7b7-845c609f11c8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("b0c0c9ba-1b00-474c-8a76-13e4e348f75e"),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("f113c401-a90e-4454-9ba3-082c046b2c7e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            UserId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("d8cdb1e3-e5c3-4a07-9620-392723332c0e"),
                            CommentId = new Guid("472960bb-9eb0-49b1-9e0d-36d372099715"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("b6b07f21-ef96-4899-8372-305e8a0575e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("f35e555e-44b3-48ab-8d2e-98f86145e693"),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("3dbcff47-2ad2-4fe3-a121-eb2dd4d6c87d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("50d1fe9d-0328-4edc-a3c8-44a017a01f5b"),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("d009ea65-5761-4fdd-824c-2b909bcc46f1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("b2dacf23-fdf2-4ae9-ba6f-824d35d8fcb0"),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("0a122ed0-d13f-4c3b-a5c1-c168076c01a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            UserId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("44233740-a3e0-4096-87b8-fcd43d9e28c0"),
                            CommentId = new Guid("82b61da4-aebf-4071-a77b-16dd3b4b926f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("0a45e5cf-05b7-4857-9fdd-925e5f4a5370"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("5b438114-8c0f-4595-8f47-3f53f572ac34"),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        },
                        new
                        {
                            Id = new Guid("7d6fa6d5-934e-4488-9312-338408fbfd7b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("ae0d69b4-e15a-441d-bd9e-2ee7be0629e7"),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        },
                        new
                        {
                            Id = new Guid("f1b80986-0a09-424b-9919-fc7a87315574"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("f106260f-1c90-49a1-944d-59e2a0f49be2"),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        },
                        new
                        {
                            Id = new Guid("97e94ab5-2f9e-4b7a-9044-771a24d0385a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            UserId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        },
                        new
                        {
                            Id = new Guid("d44d5dec-8359-472b-ad3d-1a85fde114ba"),
                            CommentId = new Guid("b987045d-b639-4542-afcd-eda7a4933edd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            AuthorId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(829),
                            Description = "Приходьте до мене сьогодні в джакузі, тут весело. Про оплату потім.",
                            Title = "Джакузі з скінхедом"
                        },
                        new
                        {
                            Id = new Guid("e0d94930-0578-405d-a218-6cda688bd778"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(835),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("b0c0c9ba-1b00-474c-8a76-13e4e348f75e"),
                            AuthorId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(878),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("b2dacf23-fdf2-4ae9-ba6f-824d35d8fcb0"),
                            AuthorId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(885),
                            Description = "Хтось цікавиться проведенням вечірки вдома з настільними іграми? Я маю гарну колекцію ігор і шукаю компанію для веселого проведення вечора. Приєднуйтесь!",
                            Title = "Вечірка вдома з настільними іграми"
                        },
                        new
                        {
                            Id = new Guid("f106260f-1c90-49a1-944d-59e2a0f49be2"),
                            AuthorId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(891),
                            Description = "Шукаю людей, які так само захоплені гуртом 'Rammstein' і хотіли б піти на їхній концерт. Разом буде набагато веселіше! Хто бажає долучитися?",
                            Title = "Концерт Rammstein"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PartyTags");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            TagId = new Guid("822d5ea4-b116-4cc6-a4ec-5d873cc01ff4")
                        },
                        new
                        {
                            PartyId = new Guid("e0d94930-0578-405d-a218-6cda688bd778"),
                            TagId = new Guid("7da5fee9-3459-4967-a4fc-5216dc8800a7")
                        },
                        new
                        {
                            PartyId = new Guid("b0c0c9ba-1b00-474c-8a76-13e4e348f75e"),
                            TagId = new Guid("40f77412-864f-4293-8bf0-8f5c0c02530c")
                        },
                        new
                        {
                            PartyId = new Guid("b2dacf23-fdf2-4ae9-ba6f-824d35d8fcb0"),
                            TagId = new Guid("73c4768a-ec00-4dd8-a205-3c5d19633809")
                        },
                        new
                        {
                            PartyId = new Guid("f106260f-1c90-49a1-944d-59e2a0f49be2"),
                            TagId = new Guid("b86de954-ec7c-4b93-90e7-00478e51e689")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PartyUsers");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("6cc33e2e-9ad2-4653-ba57-26ab95848ac9"),
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            PartyId = new Guid("e0d94930-0578-405d-a218-6cda688bd778"),
                            UserId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            PartyId = new Guid("b0c0c9ba-1b00-474c-8a76-13e4e348f75e"),
                            UserId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            PartyId = new Guid("b2dacf23-fdf2-4ae9-ba6f-824d35d8fcb0"),
                            UserId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            PartyId = new Guid("f106260f-1c90-49a1-944d-59e2a0f49be2"),
                            UserId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af7a75a2-9104-4af3-8f05-0dd38a18b519"),
                            Phone = "+380687654587",
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6")
                        },
                        new
                        {
                            Id = new Guid("26a4ad95-86e6-49cd-bc27-c8f45581684e"),
                            Phone = "+380988234901",
                            UserId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2")
                        },
                        new
                        {
                            Id = new Guid("e223801f-e551-493b-9a57-7de74aadd8cd"),
                            Phone = "+380660981292",
                            UserId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877")
                        },
                        new
                        {
                            Id = new Guid("744ad1f4-18c9-4799-adf5-37dc7ff7bb4d"),
                            Phone = "+380508672351",
                            UserId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41")
                        },
                        new
                        {
                            Id = new Guid("dba9b0aa-306b-47b4-a283-ca99b5a4b87a"),
                            Phone = "+380955647834",
                            UserId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083"),
                            AuthorId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(693),
                            Description = "Карпати інфо шахраї! Я забронювала собі номер в одній з камер Азкабану, але дементори мене туди не впустили. Це жах!",
                            Title = "Увага!"
                        },
                        new
                        {
                            Id = new Guid("b0bf0a6c-b8c0-48a3-ba82-17ed13cf72f2"),
                            AuthorId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            CreatedDate = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(740),
                            Description = "Нещодавно повернулися з унікальної подорожі до Карпат і просто захоплюємося цим мальовничим куточком природи. Гірські ландшафти та заповідні ліси залишили незабутні враження в нашій пам'яті. Рекомендуємо всім любителям пригод відвідати цю частину України!",
                            Title = "Незабутні враження від Карпат"
                        },
                        new
                        {
                            Id = new Guid("b089e754-41f3-4881-8fcb-848e4437a9b3"),
                            AuthorId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            CreatedDate = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(745),
                            Description = "Під час нашої поїздки в Карпати ми не лише насолоджувалися природою, але й смакували справжні кулінарні шедеври. Місцеві страви, такі як вершкові гриби та банош, просто вражають своїм неповторним смаком. Рекомендуємо спробувати!",
                            Title = "Смаколики Карпатської кухні"
                        },
                        new
                        {
                            Id = new Guid("f35e555e-44b3-48ab-8d2e-98f86145e693"),
                            AuthorId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            CreatedDate = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(750),
                            Description = "Під час наших пішохідних прогулянок по Карпатах ми були просто зачаровані мальовничими пейзажами, які відкривалися перед нами. Гірські потоки, зелені луки та красиві гори - все це створює незабутню атмосферу та надихає на нові відкриття. Рекомендуємо це місце для всіх любителів активного відпочинку та красивої природи!",
                            Title = "Неймовірні пейзажі Карпат"
                        },
                        new
                        {
                            Id = new Guid("5b438114-8c0f-4595-8f47-3f53f572ac34"),
                            AuthorId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            CreatedDate = new DateTime(2023, 6, 14, 12, 55, 17, 126, DateTimeKind.Local).AddTicks(791),
                            Description = "Наша зимова подорож до Карпат принесла нам незабутні враження від катання на лижах. Добре обладнані гірськолижні курорти та різноманітні траси задовольнять навіть найвибагливіших любителів лижного спорту. Насолоджуйтесь зимовими пригодами у Карпатах!",
                            Title = "Зимові пригоди у Карпатах"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("ec91538e-6957-4b50-aa06-ef8c2b6d5083"),
                            TagId = new Guid("822d5ea4-b116-4cc6-a4ec-5d873cc01ff4")
                        },
                        new
                        {
                            PostId = new Guid("b0bf0a6c-b8c0-48a3-ba82-17ed13cf72f2"),
                            TagId = new Guid("7da5fee9-3459-4967-a4fc-5216dc8800a7")
                        },
                        new
                        {
                            PostId = new Guid("b089e754-41f3-4881-8fcb-848e4437a9b3"),
                            TagId = new Guid("40f77412-864f-4293-8bf0-8f5c0c02530c")
                        },
                        new
                        {
                            PostId = new Guid("f35e555e-44b3-48ab-8d2e-98f86145e693"),
                            TagId = new Guid("73c4768a-ec00-4dd8-a205-3c5d19633809")
                        },
                        new
                        {
                            PostId = new Guid("5b438114-8c0f-4595-8f47-3f53f572ac34"),
                            TagId = new Guid("b86de954-ec7c-4b93-90e7-00478e51e689")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2cdfb1ff-d24c-4e11-8c4a-136f713dee30"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("56f475b6-430a-4201-8e08-9f2ee83887e0"),
                            Name = "Resident"
                        },
                        new
                        {
                            Id = new Guid("a7a0853a-f622-4a64-b1d4-5a1acbbf40c1"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("822d5ea4-b116-4cc6-a4ec-5d873cc01ff4"),
                            Name = "Лижі"
                        },
                        new
                        {
                            Id = new Guid("7da5fee9-3459-4967-a4fc-5216dc8800a7"),
                            Name = "Сноуборд"
                        },
                        new
                        {
                            Id = new Guid("40f77412-864f-4293-8bf0-8f5c0c02530c"),
                            Name = "Настільні ігри"
                        },
                        new
                        {
                            Id = new Guid("73c4768a-ec00-4dd8-a205-3c5d19633809"),
                            Name = "Велосипед"
                        },
                        new
                        {
                            Id = new Guid("b86de954-ec7c-4b93-90e7-00478e51e689"),
                            Name = "Кемпінг"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harrypotter@gmail.com",
                            FirstName = "Гаррі",
                            LastName = "Поттер",
                            Password = "Hd3UAjkimPC7AdBLqZ5TXw==;3Rl6CPUezOhm1VVzceuOoXi7ANkEu0oYYn+ynVt6hIc=",
                            Rating = 3.5m,
                            RoleId = new Guid("2cdfb1ff-d24c-4e11-8c4a-136f713dee30")
                        },
                        new
                        {
                            Id = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatakae@gmail.com",
                            FirstName = "Еран",
                            LastName = "Єґа",
                            Password = "20Xx32GA1tgFTjFBdWvfFA==;UlqtoowWR8jSyDTEAW/7n75IkHJmcqD/ZOiXrE+X9b4=",
                            Rating = 1.5m,
                            RoleId = new Guid("56f475b6-430a-4201-8e08-9f2ee83887e0")
                        },
                        new
                        {
                            Id = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "killing.monsters@gmail.com",
                            FirstName = "Ґеральт",
                            LastName = "з Рівії",
                            Password = "TaT8QFxQRAVtbjboHzaq6g==;Ew+XiDem9296NGADXzbhAiLnJr8WSDmylGAAwXVF6PI=",
                            Rating = 4.5m,
                            RoleId = new Guid("a7a0853a-f622-4a64-b1d4-5a1acbbf40c1")
                        },
                        new
                        {
                            Id = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "not.exist@gmail.com",
                            FirstName = "Тайлер",
                            LastName = "Дьорден",
                            Password = "TP0+oWCNMzWs/Vj7ufYwWA==;C6GEnXFQH8iIKo37QyGr8nIRSx1waw8r9uOqL6Z79wE=",
                            Rating = 5.0m,
                            RoleId = new Guid("56f475b6-430a-4201-8e08-9f2ee83887e0")
                        },
                        new
                        {
                            Id = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bossofthegym@gmail.com",
                            FirstName = "Біллі",
                            LastName = "Герінґтон",
                            Password = "y7fqJb1fyaJ5szjYAhjb2Q==;lWAa8BxyRJQoU/sV25k7fZVV+WjiZPep/7EpKoIJJ48=",
                            Rating = 2.5m,
                            RoleId = new Guid("56f475b6-430a-4201-8e08-9f2ee83887e0")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d2732cc0-4f0a-4cf8-b24f-62657dbafed6"),
                            TagId = new Guid("822d5ea4-b116-4cc6-a4ec-5d873cc01ff4")
                        },
                        new
                        {
                            UserId = new Guid("7a78a5ba-77f6-4c8b-99d3-772a39caa3d2"),
                            TagId = new Guid("7da5fee9-3459-4967-a4fc-5216dc8800a7")
                        },
                        new
                        {
                            UserId = new Guid("3af4fbdf-59e1-42f9-8898-ff7dfd783877"),
                            TagId = new Guid("40f77412-864f-4293-8bf0-8f5c0c02530c")
                        },
                        new
                        {
                            UserId = new Guid("91db9dc2-b2d4-47cf-9263-3769ca00aa41"),
                            TagId = new Guid("73c4768a-ec00-4dd8-a205-3c5d19633809")
                        },
                        new
                        {
                            UserId = new Guid("72a6edf3-2ff5-474f-9b45-3d1fa55cf16b"),
                            TagId = new Guid("b86de954-ec7c-4b93-90e7-00478e51e689")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Comments")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Comments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("CommentsSended")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Favors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("FavorTags")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("FavorTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Favor");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Images")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Images")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Likes")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Likes")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("LikesSended")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Comment");

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Parties")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyTags")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PartyTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyUsers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PartyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PhoneNumber", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavorTags");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PartyTags");

                    b.Navigation("PartyUsers");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Navigation("FavorTags");

                    b.Navigation("PartyTags");

                    b.Navigation("PostTags");

                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsSended");

                    b.Navigation("Favors");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("LikesSended");

                    b.Navigation("Parties");

                    b.Navigation("PartyUsers");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Posts");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
