// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappion.Infrastructure;

#nullable disable

namespace Pappion.Infrastructure.Migrations
{
    [DbContext(typeof(PappionDbContext))]
    [Migration("20230617121822_PappionMigration")]
    partial class PappionMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("591360dc-b2b1-491f-8ff3-8d1c44513700"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("27a58803-71a1-4081-a10c-e153189ece77"),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            Text = "Увага! це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("a9d856ff-0992-4a6e-9c91-ef7a68e4766d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("6e573647-25ec-4298-b2e9-4c5eec746ac5"),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            Text = "Джакузі з скінхедом це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("7264b02b-80b0-4328-bc75-c3b13d711643"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("d796954d-a19b-4220-a307-158a188bf965"),
                            Grade = 0m,
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            Text = "Масаж це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("1de08753-6df9-423f-92e4-6d408bd2d2d4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            Text = "Гаррі це дуже файний пацан! Стоп...",
                            UserId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("2c24b4ba-64f9-4748-b3f2-645bccf53b31"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("f76853c2-07e6-4f71-ba63-666b64dd31a1"),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            Text = "Незабутні враження від Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("68780820-207d-427b-88dc-df867d072ad6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("5bb25d2b-4500-44b8-8e19-93124dfbff74"),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("b66ef0cf-a24b-4ac0-970b-b4214e18f18b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("73e9162f-7a5a-411c-89b2-e7008b8676cd"),
                            Grade = 0m,
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            Text = "Косметична процедура це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("7c9c96c7-6fbe-49ef-8cc2-eb4aebb775f6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            Text = "Еран це дуже файний пацан! Стоп...",
                            UserId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("efeab792-a8e9-4304-ae4b-d2de8058aad4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("0dc85af5-6ba7-4329-b2c2-94abbe4033ae"),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            Text = "Смаколики Карпатської кухні це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("a85a6004-c550-4ec6-b4b1-3014ba5979a3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("4677f772-2acd-40c3-94a3-b03ee2fe655c"),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("2d922c9d-2dd5-4fef-b537-260212653853"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("f3170037-57b9-4386-9eb8-1b0d141bb2cb"),
                            Grade = 0m,
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            Text = "Персональний тренер це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("3a1996e2-13ff-4405-a55d-9dea8ac10a42"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            Text = "Ґеральт це дуже файний пацан! Стоп...",
                            UserId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("b7c090fd-0c94-48ad-a171-d367ef125b9b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("6913590a-af0b-4b67-8cb9-b34474f4424a"),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            Text = "Неймовірні пейзажі Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("ca3f8f60-d9a4-44eb-91c8-6a1eb37fe8c9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("102ac689-dfc0-42af-abd9-10d0e5eddf63"),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            Text = "Вечірка вдома з настільними іграми це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("3540e2e7-2041-4645-bdee-60478ca53160"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("e5cc3341-235a-484d-898d-281774cb1594"),
                            Grade = 0m,
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            Text = "Ретельна манікюр і педикюр це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("d5e705bd-d499-45c0-96bf-e76627285ddb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            Text = "Тайлер це дуже файний пацан! Стоп...",
                            UserId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("9eff24db-46fa-43e7-b9ae-97a133e8becc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("dfdfa042-14bf-42bc-8008-3e86bbb1ed7a"),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            Text = "Зимові пригоди у Карпатах це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("b89c0acd-8edb-4fab-9025-d39a8cf683c9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("57c8ba50-a84d-40dd-802b-bb9f884e7614"),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            Text = "Концерт Rammstein це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("1d96f30a-d8a7-42b2-9094-011d0ae3bb52"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("85aea96e-38f7-4540-99fd-4f4f3b06598d"),
                            Grade = 0m,
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            Text = "Сеанс йоги це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("d5a0f0de-2fd6-4c86-8f75-53fef9156b14"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            Text = "Біллі це дуже файний пацан! Стоп...",
                            UserId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d796954d-a19b-4220-a307-158a188bf965"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Найкращі майстри масажу готові показати всі свої вміння на вашій задубілій спині.",
                            Price = 50.5m,
                            Rating = 0m,
                            Title = "Масаж"
                        },
                        new
                        {
                            Id = new Guid("73e9162f-7a5a-411c-89b2-e7008b8676cd"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Отримайте розкішну косметичну процедуру, яка підкреслить вашу природну красу і зробить вашу шкіру сяючою.",
                            Price = 80.0m,
                            Rating = 0m,
                            Title = "Косметична процедура"
                        },
                        new
                        {
                            Id = new Guid("f3170037-57b9-4386-9eb8-1b0d141bb2cb"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Досвідчений тренер допоможе вам досягнути ваших фітнес-цілей, розробивши індивідуальну тренувальну програму для вас.",
                            Price = 70.2m,
                            Rating = 0m,
                            Title = "Персональний тренер"
                        },
                        new
                        {
                            Id = new Guid("e5cc3341-235a-484d-898d-281774cb1594"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розкішний манікюр і педикюр, який зробить ваші нігті і ніжки неймовірно чудовими і доглянутими.",
                            Price = 45.8m,
                            Rating = 0m,
                            Title = "Ретельна манікюр і педикюр"
                        },
                        new
                        {
                            Id = new Guid("85aea96e-38f7-4540-99fd-4f4f3b06598d"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розслабтеся і зосередьтеся на своєму тілі та розумі під час особистого сеансу йоги з досвідченим інструктором.",
                            Price = 55.3m,
                            Rating = 0m,
                            Title = "Сеанс йоги"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.Property<Guid>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("FavorId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FavorTags");

                    b.HasData(
                        new
                        {
                            FavorId = new Guid("d796954d-a19b-4220-a307-158a188bf965"),
                            TagId = new Guid("69697103-7de2-473d-9495-3c676a0141b7")
                        },
                        new
                        {
                            FavorId = new Guid("73e9162f-7a5a-411c-89b2-e7008b8676cd"),
                            TagId = new Guid("f26eb314-0b87-4ce1-9412-ddcedc964690")
                        },
                        new
                        {
                            FavorId = new Guid("f3170037-57b9-4386-9eb8-1b0d141bb2cb"),
                            TagId = new Guid("9f26a73f-0f3f-48a7-9161-8e29d5f7bb83")
                        },
                        new
                        {
                            FavorId = new Guid("e5cc3341-235a-484d-898d-281774cb1594"),
                            TagId = new Guid("3c2de118-e173-4e12-95cf-a2cef626a5a3")
                        },
                        new
                        {
                            FavorId = new Guid("85aea96e-38f7-4540-99fd-4f4f3b06598d"),
                            TagId = new Guid("7ffd387f-61d9-4f23-a59a-dee2de132f44")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7fa50b78-5533-4d73-8a52-e3cc722e6189"),
                            Path = "8d08fcb9-8216-480a-ac50-7704224c1aba.png",
                            UserId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("721d49e5-4b05-42c4-9806-4afc07701b53"),
                            Path = "10fa44c6-09ed-45a4-a31a-ea2d9a6b7164.png",
                            PostId = new Guid("27a58803-71a1-4081-a10c-e153189ece77")
                        },
                        new
                        {
                            Id = new Guid("bba50028-019c-4b3d-90ee-d034532f9863"),
                            PartyId = new Guid("6e573647-25ec-4298-b2e9-4c5eec746ac5"),
                            Path = "0a41cad7-68a9-4399-b5fa-4ab469c46885.png"
                        },
                        new
                        {
                            Id = new Guid("e28e2864-58d9-4a25-802e-a616602d9858"),
                            FavorId = new Guid("d796954d-a19b-4220-a307-158a188bf965"),
                            Path = "a86ef337-79dc-4bc6-93a4-ce1324f86c21.png"
                        },
                        new
                        {
                            Id = new Guid("d067af25-99d0-4c5d-b4e3-5c9b82c2623e"),
                            Path = "68ae3d64-3328-4805-9d98-86714f6257c9.png",
                            UserId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("8872d1a5-a5af-4c0f-bbcb-8b93e1116c7c"),
                            Path = "9470cd9b-e6b8-4f5f-a06f-20653395313d.png",
                            PostId = new Guid("f76853c2-07e6-4f71-ba63-666b64dd31a1")
                        },
                        new
                        {
                            Id = new Guid("f928a8af-0402-466e-8ca1-e8ebdc855204"),
                            PartyId = new Guid("5bb25d2b-4500-44b8-8e19-93124dfbff74"),
                            Path = "0a5b1904-b171-492e-ac66-bf8cb5873249.png"
                        },
                        new
                        {
                            Id = new Guid("99736258-0b9b-4c02-b2c3-62c7c018b645"),
                            FavorId = new Guid("73e9162f-7a5a-411c-89b2-e7008b8676cd"),
                            Path = "ced60315-da9c-4b11-bc34-4afede464cc7.png"
                        },
                        new
                        {
                            Id = new Guid("73a9dca2-92d1-4074-b1b5-0a1abf3c2e5b"),
                            Path = "c7a48821-6f90-44ad-a67a-f8e54aa9da83.png",
                            UserId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("d45b8813-9cbc-4d45-af5e-52fcd42f962f"),
                            Path = "b1d92c49-26bc-41e8-8026-af01f5c4b52c.png",
                            PostId = new Guid("0dc85af5-6ba7-4329-b2c2-94abbe4033ae")
                        },
                        new
                        {
                            Id = new Guid("c74eb49e-ee7a-4b29-b0db-43f9a70120f3"),
                            PartyId = new Guid("4677f772-2acd-40c3-94a3-b03ee2fe655c"),
                            Path = "a22d6751-84f5-4a3a-ac67-8869c97f9f90.png"
                        },
                        new
                        {
                            Id = new Guid("d56b1300-86d0-4473-b36e-8018c9eb61fb"),
                            FavorId = new Guid("f3170037-57b9-4386-9eb8-1b0d141bb2cb"),
                            Path = "497245a8-4f2d-4f0b-a063-87c7a431f181.png"
                        },
                        new
                        {
                            Id = new Guid("7808aa28-0ec5-4063-82c1-c40c3b18829e"),
                            Path = "d6181258-35b6-4564-bd87-94122639bd2c.png",
                            UserId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("94a8de4c-0194-4a34-a863-2e8dbc821d1a"),
                            Path = "bab337a8-8651-461a-b88d-1d048a9cea02.png",
                            PostId = new Guid("6913590a-af0b-4b67-8cb9-b34474f4424a")
                        },
                        new
                        {
                            Id = new Guid("47b94a9b-317a-41d3-9e43-e9ab3a3d0309"),
                            PartyId = new Guid("102ac689-dfc0-42af-abd9-10d0e5eddf63"),
                            Path = "834d313f-2243-47bf-832d-ec03a523b397.png"
                        },
                        new
                        {
                            Id = new Guid("636a4c42-5c97-4bc7-ac3e-39770bdc4771"),
                            FavorId = new Guid("e5cc3341-235a-484d-898d-281774cb1594"),
                            Path = "8778283c-e253-48d3-bd2b-04d32b0195d1.png"
                        },
                        new
                        {
                            Id = new Guid("e72ae2f7-05f4-4136-b048-a17682c483ef"),
                            Path = "76446e29-7895-48b5-88a8-6aa0053cb950.png",
                            UserId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        },
                        new
                        {
                            Id = new Guid("0169eac2-f30d-4494-a1d8-5603a59217c9"),
                            Path = "73aabeec-7310-429a-a060-258893d97a33.png",
                            PostId = new Guid("dfdfa042-14bf-42bc-8008-3e86bbb1ed7a")
                        },
                        new
                        {
                            Id = new Guid("06d3b8ec-0a4d-4852-9cfa-bc2b8dbd38a3"),
                            PartyId = new Guid("57c8ba50-a84d-40dd-802b-bb9f884e7614"),
                            Path = "ff9187ea-bdbf-4fd7-bea7-b09d21ce3f85.png"
                        },
                        new
                        {
                            Id = new Guid("2e146f8f-d4ea-4528-8739-fd8df0e3740f"),
                            FavorId = new Guid("85aea96e-38f7-4540-99fd-4f4f3b06598d"),
                            Path = "8d149e33-b52f-4d2d-b9d4-dfaee86f0ef8.png"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3f1fa69-e189-4f6a-b685-f1bdd30b159d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("27a58803-71a1-4081-a10c-e153189ece77"),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("7d444e6c-43a6-4f35-8c56-9fa40445e141"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("d796954d-a19b-4220-a307-158a188bf965"),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("d3ae4913-4f9c-4768-bbdb-d96be402bf27"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("6e573647-25ec-4298-b2e9-4c5eec746ac5"),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("caabf843-87bb-47fb-ad93-500ad4d3cf7e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            UserId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("c6333530-1266-4883-a81a-c5226acb2cec"),
                            CommentId = new Guid("591360dc-b2b1-491f-8ff3-8d1c44513700"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            Id = new Guid("e510e1f5-d34d-48a3-a832-be986d11fd4f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("f76853c2-07e6-4f71-ba63-666b64dd31a1"),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("434d3605-5be8-4d1d-a557-74a6c69ae862"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("73e9162f-7a5a-411c-89b2-e7008b8676cd"),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("5b92d726-a4a5-400b-b519-e49e71309ea4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("5bb25d2b-4500-44b8-8e19-93124dfbff74"),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("6eebe024-52e1-4326-982a-d05a8e22ab80"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            UserId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("4e28d5c0-332a-4944-a65f-3693453cd6e7"),
                            CommentId = new Guid("a9d856ff-0992-4a6e-9c91-ef7a68e4766d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            Id = new Guid("f0e281c3-d5c0-49ef-8cf9-dfbb8a5a9327"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("0dc85af5-6ba7-4329-b2c2-94abbe4033ae"),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("e3da1ac1-93e1-4aa4-b35b-55f58afa113d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("f3170037-57b9-4386-9eb8-1b0d141bb2cb"),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("76287490-b98b-4920-af9e-beb0d7bd998d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("4677f772-2acd-40c3-94a3-b03ee2fe655c"),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("1365ff6f-ff97-4cb4-90c2-d865e78cc546"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            UserId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("f263f775-eaf2-416e-8e40-f1d45df322f2"),
                            CommentId = new Guid("7264b02b-80b0-4328-bc75-c3b13d711643"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            Id = new Guid("091f8836-108d-4a9e-b5ff-7244cca33b66"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("6913590a-af0b-4b67-8cb9-b34474f4424a"),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("55adb7ea-fe19-43db-bfe9-a22060920d90"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("e5cc3341-235a-484d-898d-281774cb1594"),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("23dff11c-f8f4-4834-8874-e9f541d7a766"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("102ac689-dfc0-42af-abd9-10d0e5eddf63"),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("7655b805-4b09-4e2a-a2b4-061f336e42af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            UserId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("8bb15ff4-fd46-48da-ba1e-529da2c9b7a5"),
                            CommentId = new Guid("1de08753-6df9-423f-92e4-6d408bd2d2d4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            Id = new Guid("f4d67d7a-d0c5-4c83-9d39-bae50f102647"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("dfdfa042-14bf-42bc-8008-3e86bbb1ed7a"),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        },
                        new
                        {
                            Id = new Guid("2eb25930-3545-4f85-b348-2cdd248c41c8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("85aea96e-38f7-4540-99fd-4f4f3b06598d"),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        },
                        new
                        {
                            Id = new Guid("ed5b80e8-436c-476f-bbfd-7589396fa2b5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("57c8ba50-a84d-40dd-802b-bb9f884e7614"),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        },
                        new
                        {
                            Id = new Guid("cb87a4a0-d567-4a58-a6e5-a6217e850998"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            UserId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        },
                        new
                        {
                            Id = new Guid("477fa423-953c-42e1-96b5-7f555b1ade51"),
                            CommentId = new Guid("2c24b4ba-64f9-4748-b3f2-645bccf53b31"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e573647-25ec-4298-b2e9-4c5eec746ac5"),
                            AuthorId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8704),
                            Description = "Приходьте до мене сьогодні в джакузі, тут весело. Про оплату потім.",
                            Title = "Джакузі з скінхедом"
                        },
                        new
                        {
                            Id = new Guid("5bb25d2b-4500-44b8-8e19-93124dfbff74"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8710),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("4677f772-2acd-40c3-94a3-b03ee2fe655c"),
                            AuthorId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8714),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("102ac689-dfc0-42af-abd9-10d0e5eddf63"),
                            AuthorId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8719),
                            Description = "Хтось цікавиться проведенням вечірки вдома з настільними іграми? Я маю гарну колекцію ігор і шукаю компанію для веселого проведення вечора. Приєднуйтесь!",
                            Title = "Вечірка вдома з настільними іграми"
                        },
                        new
                        {
                            Id = new Guid("57c8ba50-a84d-40dd-802b-bb9f884e7614"),
                            AuthorId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8723),
                            Description = "Шукаю людей, які так само захоплені гуртом 'Rammstein' і хотіли б піти на їхній концерт. Разом буде набагато веселіше! Хто бажає долучитися?",
                            Title = "Концерт Rammstein"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PartyTags");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("6e573647-25ec-4298-b2e9-4c5eec746ac5"),
                            TagId = new Guid("69697103-7de2-473d-9495-3c676a0141b7")
                        },
                        new
                        {
                            PartyId = new Guid("5bb25d2b-4500-44b8-8e19-93124dfbff74"),
                            TagId = new Guid("f26eb314-0b87-4ce1-9412-ddcedc964690")
                        },
                        new
                        {
                            PartyId = new Guid("4677f772-2acd-40c3-94a3-b03ee2fe655c"),
                            TagId = new Guid("9f26a73f-0f3f-48a7-9161-8e29d5f7bb83")
                        },
                        new
                        {
                            PartyId = new Guid("102ac689-dfc0-42af-abd9-10d0e5eddf63"),
                            TagId = new Guid("3c2de118-e173-4e12-95cf-a2cef626a5a3")
                        },
                        new
                        {
                            PartyId = new Guid("57c8ba50-a84d-40dd-802b-bb9f884e7614"),
                            TagId = new Guid("7ffd387f-61d9-4f23-a59a-dee2de132f44")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PartyUsers");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("6e573647-25ec-4298-b2e9-4c5eec746ac5"),
                            UserId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8")
                        },
                        new
                        {
                            PartyId = new Guid("5bb25d2b-4500-44b8-8e19-93124dfbff74"),
                            UserId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444")
                        },
                        new
                        {
                            PartyId = new Guid("4677f772-2acd-40c3-94a3-b03ee2fe655c"),
                            UserId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9")
                        },
                        new
                        {
                            PartyId = new Guid("102ac689-dfc0-42af-abd9-10d0e5eddf63"),
                            UserId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc")
                        },
                        new
                        {
                            PartyId = new Guid("57c8ba50-a84d-40dd-802b-bb9f884e7614"),
                            UserId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27a58803-71a1-4081-a10c-e153189ece77"),
                            AuthorId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8611),
                            Description = "Карпати інфо шахраї! Я забронювала собі номер в одній з камер Азкабану, але дементори мене туди не впустили. Це жах!",
                            Title = "Увага!"
                        },
                        new
                        {
                            Id = new Guid("f76853c2-07e6-4f71-ba63-666b64dd31a1"),
                            AuthorId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            CreatedDate = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8657),
                            Description = "Нещодавно повернулися з унікальної подорожі до Карпат і просто захоплюємося цим мальовничим куточком природи. Гірські ландшафти та заповідні ліси залишили незабутні враження в нашій пам'яті. Рекомендуємо всім любителям пригод відвідати цю частину України!",
                            Title = "Незабутні враження від Карпат"
                        },
                        new
                        {
                            Id = new Guid("0dc85af5-6ba7-4329-b2c2-94abbe4033ae"),
                            AuthorId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            CreatedDate = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8664),
                            Description = "Під час нашої поїздки в Карпати ми не лише насолоджувалися природою, але й смакували справжні кулінарні шедеври. Місцеві страви, такі як вершкові гриби та банош, просто вражають своїм неповторним смаком. Рекомендуємо спробувати!",
                            Title = "Смаколики Карпатської кухні"
                        },
                        new
                        {
                            Id = new Guid("6913590a-af0b-4b67-8cb9-b34474f4424a"),
                            AuthorId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            CreatedDate = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8669),
                            Description = "Під час наших пішохідних прогулянок по Карпатах ми були просто зачаровані мальовничими пейзажами, які відкривалися перед нами. Гірські потоки, зелені луки та красиві гори - все це створює незабутню атмосферу та надихає на нові відкриття. Рекомендуємо це місце для всіх любителів активного відпочинку та красивої природи!",
                            Title = "Неймовірні пейзажі Карпат"
                        },
                        new
                        {
                            Id = new Guid("dfdfa042-14bf-42bc-8008-3e86bbb1ed7a"),
                            AuthorId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            CreatedDate = new DateTime(2023, 6, 17, 15, 18, 22, 614, DateTimeKind.Local).AddTicks(8674),
                            Description = "Наша зимова подорож до Карпат принесла нам незабутні враження від катання на лижах. Добре обладнані гірськолижні курорти та різноманітні траси задовольнять навіть найвибагливіших любителів лижного спорту. Насолоджуйтесь зимовими пригодами у Карпатах!",
                            Title = "Зимові пригоди у Карпатах"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("27a58803-71a1-4081-a10c-e153189ece77"),
                            TagId = new Guid("69697103-7de2-473d-9495-3c676a0141b7")
                        },
                        new
                        {
                            PostId = new Guid("f76853c2-07e6-4f71-ba63-666b64dd31a1"),
                            TagId = new Guid("f26eb314-0b87-4ce1-9412-ddcedc964690")
                        },
                        new
                        {
                            PostId = new Guid("0dc85af5-6ba7-4329-b2c2-94abbe4033ae"),
                            TagId = new Guid("9f26a73f-0f3f-48a7-9161-8e29d5f7bb83")
                        },
                        new
                        {
                            PostId = new Guid("6913590a-af0b-4b67-8cb9-b34474f4424a"),
                            TagId = new Guid("3c2de118-e173-4e12-95cf-a2cef626a5a3")
                        },
                        new
                        {
                            PostId = new Guid("dfdfa042-14bf-42bc-8008-3e86bbb1ed7a"),
                            TagId = new Guid("7ffd387f-61d9-4f23-a59a-dee2de132f44")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69697103-7de2-473d-9495-3c676a0141b7"),
                            Name = "Лижі"
                        },
                        new
                        {
                            Id = new Guid("f26eb314-0b87-4ce1-9412-ddcedc964690"),
                            Name = "Сноуборд"
                        },
                        new
                        {
                            Id = new Guid("9f26a73f-0f3f-48a7-9161-8e29d5f7bb83"),
                            Name = "Настільні ігри"
                        },
                        new
                        {
                            Id = new Guid("3c2de118-e173-4e12-95cf-a2cef626a5a3"),
                            Name = "Велосипед"
                        },
                        new
                        {
                            Id = new Guid("7ffd387f-61d9-4f23-a59a-dee2de132f44"),
                            Name = "Кемпінг"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harrypotter@gmail.com",
                            FirstName = "Гаррі",
                            LastName = "Поттер",
                            Password = "y/BtxI0F4gdteZLfYdo9Jg==;ZCu1HY1iTTvsj3vrbgfyHsFqUrD/0zQSdxejVeB21tw=",
                            PhoneNumber = "+38000000000",
                            Rating = 3.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatakae@gmail.com",
                            FirstName = "Еран",
                            LastName = "Єґа",
                            Password = "Wfs4VBfI8TzIgiWCaBIj6g==;5kz7OgSy5HS1gjC5e+Wu8sjDtMK9kddJQEbL8wwBSgw=",
                            PhoneNumber = "+38000000000",
                            Rating = 1.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "killing.monsters@gmail.com",
                            FirstName = "Ґеральт",
                            LastName = "з Рівії",
                            Password = "mxaAM8+/czroHE/v+yS+wA==;zqBsuZCqXGNUth7OYpJZfdwJStKu/38Vu7PINF+zSQw=",
                            PhoneNumber = "+38000000000",
                            Rating = 4.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "not.exist@gmail.com",
                            FirstName = "Тайлер",
                            LastName = "Дьорден",
                            Password = "40YydzmEnQ1hzN2prE+icQ==;i66kZFJOvbBjvNjhmR3y82SGcjajE/0Qw05l98pllhw=",
                            PhoneNumber = "+38000000000",
                            Rating = 5.0m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bossofthegym@gmail.com",
                            FirstName = "Біллі",
                            LastName = "Герінґтон",
                            Password = "NkwocNZ3l262B3mX11lU9A==;efgCj+yQTM6XRXQc6OejSok3ZIp2Omqsl7UbLXQ5MnY=",
                            PhoneNumber = "+38000000000",
                            Rating = 2.5m,
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("08f211e7-af5f-403c-897e-a31527b721d8"),
                            TagId = new Guid("69697103-7de2-473d-9495-3c676a0141b7")
                        },
                        new
                        {
                            UserId = new Guid("afcf9313-21da-4da1-b6aa-c65a2bfa7444"),
                            TagId = new Guid("f26eb314-0b87-4ce1-9412-ddcedc964690")
                        },
                        new
                        {
                            UserId = new Guid("890d6887-20ae-4ab9-b358-2c57bb35f5f9"),
                            TagId = new Guid("9f26a73f-0f3f-48a7-9161-8e29d5f7bb83")
                        },
                        new
                        {
                            UserId = new Guid("49bb2916-c46c-440e-8e3f-97464b9dc3dc"),
                            TagId = new Guid("3c2de118-e173-4e12-95cf-a2cef626a5a3")
                        },
                        new
                        {
                            UserId = new Guid("0e53e2b4-d5cf-4e46-b7ec-23fa48d68100"),
                            TagId = new Guid("7ffd387f-61d9-4f23-a59a-dee2de132f44")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Comments")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Comments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("CommentsSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Favors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("FavorTags")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("FavorTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favor");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Images")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Images")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithOne("Image")
                        .HasForeignKey("Pappion.Domain.Entities.Image", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Likes")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Likes")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("LikesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Comment");

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Parties")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyTags")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PartyTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyUsers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PartyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavorTags");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PartyTags");

                    b.Navigation("PartyUsers");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Navigation("FavorTags");

                    b.Navigation("PartyTags");

                    b.Navigation("PostTags");

                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsSent");

                    b.Navigation("Favors");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Likes");

                    b.Navigation("LikesSent");

                    b.Navigation("Parties");

                    b.Navigation("PartyUsers");

                    b.Navigation("Posts");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
