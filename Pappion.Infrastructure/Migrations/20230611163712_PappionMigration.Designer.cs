// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappion.Infrastructure;

#nullable disable

namespace Pappion.Infrastructure.Migrations
{
    [DbContext(typeof(PappionDbContext))]
    [Migration("20230611163712_PappionMigration")]
    partial class PappionMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22f0a6b7-2129-4936-813a-2e24130cbb7d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda"),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            Text = "Увага! це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("30613838-1c70-4f96-9d8c-559e3461c68c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            Text = "Джакузі з скінхедом це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("3b9dabc5-b365-4a45-979d-0cee670d140f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            Grade = 0m,
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            Text = "Масаж це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("66a051b9-f45f-47a2-bfab-3d5b97d2122f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            Text = "Гаррі це дуже файний пацан! Стоп...",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("40316343-3146-4a5e-a6d6-9d3f3765b38a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("51e9de90-76be-4f27-8bd4-6b5c2937099a"),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            Text = "Незабутні враження від Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("b2528f2b-6aca-41ee-bf90-9a959a1af7b1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("d1a44c54-d95a-42a3-b6d2-87c63214bd87"),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("3814a39f-8332-431e-abc1-73a4a072eb22"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("05642f93-ba1c-4667-8508-b5327cf49900"),
                            Grade = 0m,
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            Text = "Косметична процедура це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("f5ecf94f-2ff1-4510-ab79-51d5997506f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            Text = "Еран це дуже файний пацан! Стоп...",
                            UserId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("87af1501-ad0d-4572-92ae-e5019def8909"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("fd75f018-abbc-45b0-b691-112abc1a2811"),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            Text = "Смаколики Карпатської кухні це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("76cd9aef-d6fe-46c5-821b-16d4515b2e2c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("0c063b59-dd86-4e01-8ce7-5d9dcb36838b"),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("58a9cc2f-4c6f-4f99-90c4-5961da061f78"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("0d615659-569d-40a8-80d9-6aa6a6148956"),
                            Grade = 0m,
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            Text = "Персональний тренер це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("823acf67-be09-4f5a-b63d-baa567e71978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            Text = "Ґеральт це дуже файний пацан! Стоп...",
                            UserId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("ed9217d5-19a5-4d71-a868-3e2e7a2d1fd3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("3c41c506-80b3-4742-a44d-10e4dc8f9fe4"),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            Text = "Неймовірні пейзажі Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("19695b83-fcbd-4619-aeb5-70ec864cf3b7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("752f4314-24bd-485d-bf0c-85e3fe303ea4"),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            Text = "Вечірка вдома з настільними іграми це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("65e7e4f9-d294-41a6-949f-c46e4d4d58af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("f62048e4-b462-4164-9efb-9420fc35e93f"),
                            Grade = 0m,
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            Text = "Ретельна манікюр і педикюр це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("b3f0c151-946c-4469-b37c-e1e7178eba7e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            Text = "Тайлер це дуже файний пацан! Стоп...",
                            UserId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("5ff882ad-675e-442d-94a7-0fcbbd7ba863"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("cf237311-a526-4c1a-8ba8-4c1bb661ba71"),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            Text = "Зимові пригоди у Карпатах це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("47a48f98-7f80-43c8-99b1-1e8cb9a9ac9d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("1c8ab47f-928e-4604-a37c-f22ec7306b9d"),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            Text = "Концерт Rammstein це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("ad4db20b-673a-4672-8c0a-3b621c2a5d24"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("4a627a97-ea01-4e3d-b405-cafa8eaa46f6"),
                            Grade = 0m,
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            Text = "Сеанс йоги це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("0053cb1a-25f4-4afb-a255-d212bbfcc83c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            Text = "Біллі це дуже файний пацан! Стоп...",
                            UserId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Найкращі майстри масажу готові показати всі свої вміння на вашій задубілій спині.",
                            Price = 50.5m,
                            Rating = 0m,
                            Title = "Масаж"
                        },
                        new
                        {
                            Id = new Guid("05642f93-ba1c-4667-8508-b5327cf49900"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Отримайте розкішну косметичну процедуру, яка підкреслить вашу природну красу і зробить вашу шкіру сяючою.",
                            Price = 80.0m,
                            Rating = 0m,
                            Title = "Косметична процедура"
                        },
                        new
                        {
                            Id = new Guid("0d615659-569d-40a8-80d9-6aa6a6148956"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Досвідчений тренер допоможе вам досягнути ваших фітнес-цілей, розробивши індивідуальну тренувальну програму для вас.",
                            Price = 70.2m,
                            Rating = 0m,
                            Title = "Персональний тренер"
                        },
                        new
                        {
                            Id = new Guid("f62048e4-b462-4164-9efb-9420fc35e93f"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розкішний манікюр і педикюр, який зробить ваші нігті і ніжки неймовірно чудовими і доглянутими.",
                            Price = 45.8m,
                            Rating = 0m,
                            Title = "Ретельна манікюр і педикюр"
                        },
                        new
                        {
                            Id = new Guid("4a627a97-ea01-4e3d-b405-cafa8eaa46f6"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розслабтеся і зосередьтеся на своєму тілі та розумі під час особистого сеансу йоги з досвідченим інструктором.",
                            Price = 55.3m,
                            Rating = 0m,
                            Title = "Сеанс йоги"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.Property<Guid>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("FavorId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FavorTags");

                    b.HasData(
                        new
                        {
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            TagId = new Guid("4c6665dd-994d-49d7-abe5-b77b35f4be8d")
                        },
                        new
                        {
                            FavorId = new Guid("05642f93-ba1c-4667-8508-b5327cf49900"),
                            TagId = new Guid("3b821ecd-de88-47c0-b365-3485847b6250")
                        },
                        new
                        {
                            FavorId = new Guid("0d615659-569d-40a8-80d9-6aa6a6148956"),
                            TagId = new Guid("8d162146-4b15-48fe-bbe0-05e2e0966394")
                        },
                        new
                        {
                            FavorId = new Guid("f62048e4-b462-4164-9efb-9420fc35e93f"),
                            TagId = new Guid("2520cdf3-3932-4ed9-ba8c-f9d9149f8465")
                        },
                        new
                        {
                            FavorId = new Guid("4a627a97-ea01-4e3d-b405-cafa8eaa46f6"),
                            TagId = new Guid("edd728e1-76d4-4c01-8f34-5e9ec75a6a95")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7062e329-d94f-46e1-8754-cc3ba2a5efe9"),
                            Path = "aa9c6552-d0e1-4cc7-8e0f-991d2b6a2695.png",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("7510a8d7-b442-4433-ad50-ae5ee40a40ee"),
                            Path = "a91ff5b6-2d0e-4bba-8d67-60d514f89297.png",
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda")
                        },
                        new
                        {
                            Id = new Guid("815ce203-f24d-40db-a7b3-8e8eeabf7054"),
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            Path = "c5e9e99c-2e64-4e45-a06f-56e9cf5cdcf8.png"
                        },
                        new
                        {
                            Id = new Guid("aa2a2896-6f82-4039-84d1-5d191646d92c"),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            Path = "a4c40f2b-9fb8-4a54-bcb7-ee10bb6c37a3.png"
                        },
                        new
                        {
                            Id = new Guid("bcfa3fde-65b7-4855-9540-ee9fc38e4fc8"),
                            Path = "c0d3ea5f-dcc8-4961-913c-a2f063d7a349.png",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("5d40dc34-3030-4dee-aa77-8b8b207ba1f9"),
                            Path = "b7ebc8cb-a584-43e2-9aa7-b5585093ee48.png",
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda")
                        },
                        new
                        {
                            Id = new Guid("1cc07206-18cf-4950-b0aa-32455193e7fa"),
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            Path = "d1dc68ca-3720-438a-b86e-0c8d5e462a7e.png"
                        },
                        new
                        {
                            Id = new Guid("125a1435-362a-4293-b597-5d0d705c4237"),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            Path = "145b8685-47d8-4b51-b98e-f11f5409a6c8.png"
                        },
                        new
                        {
                            Id = new Guid("e6b106c4-0fca-4fd3-821d-62a4a4da59d8"),
                            Path = "af5d85d9-4404-4e49-a922-53009d6752e0.png",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("049e6498-a5ec-4a35-9b02-2f92e43d21c4"),
                            Path = "71456a51-0acc-46bb-b19e-723b3e1327ee.png",
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda")
                        },
                        new
                        {
                            Id = new Guid("9990da02-bde2-4042-84b0-989b6c453471"),
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            Path = "ee886fff-5fc7-42d8-a7e3-762689aa787e.png"
                        },
                        new
                        {
                            Id = new Guid("f7db1ae6-2b4d-412d-b50b-7dea51dbbd6e"),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            Path = "afd6315b-1af7-409c-86bb-30a0c2eaff52.png"
                        },
                        new
                        {
                            Id = new Guid("af083edb-a727-4573-af56-aa3119e45551"),
                            Path = "918b77f1-9887-4001-b172-83583c5e60ef.png",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("d09ad1c4-c22d-40eb-8504-92b0a96bd7e4"),
                            Path = "ecc22aa0-772c-45be-aeda-80ee041280dd.png",
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda")
                        },
                        new
                        {
                            Id = new Guid("17952fd9-f8a4-48ef-86cd-748edb17eb5f"),
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            Path = "ea431ca5-0617-445b-88f1-3c8f62763e30.png"
                        },
                        new
                        {
                            Id = new Guid("ae3f1217-d5dd-49ef-a3d7-e6f1d156aac2"),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            Path = "fe293152-f926-4c1f-9c79-e330ec798999.png"
                        },
                        new
                        {
                            Id = new Guid("d6803ec3-981f-4ec5-b6be-f71d09d96fda"),
                            Path = "bcb8106c-f532-46c5-aa05-579ee7c997c6.png",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("c851260f-2a25-44bc-ab97-a08c0e082292"),
                            Path = "960b4e12-1817-4476-87ec-5cb25034d1eb.png",
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda")
                        },
                        new
                        {
                            Id = new Guid("0a797ff5-7277-4269-99f6-1b63c81e5dd8"),
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            Path = "d640729d-72c8-4bee-923e-eb9745305ffd.png"
                        },
                        new
                        {
                            Id = new Guid("c7849dba-1a27-46d4-9835-3a4ed2cb1588"),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            Path = "b13a3395-8cae-4e1f-b3f6-88f30d890aa5.png"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8521c0e-cd78-42d5-8638-9ada1caaa390"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda"),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("aa86a620-288a-4751-aed8-559e98130527"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("b8055fc5-a21f-4873-958f-3278de1d5a09"),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("f0ec2820-b3f3-4ee5-8493-7f9ca069cccf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("2a2e2af3-e2e8-400c-964a-f8374515ee63"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("4b19c418-f9d1-4191-b7e7-1388591893c8"),
                            CommentId = new Guid("22f0a6b7-2129-4936-813a-2e24130cbb7d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("c5d1e946-33bc-4c12-b27a-3fd58d437e5a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("51e9de90-76be-4f27-8bd4-6b5c2937099a"),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("6f156f2d-a208-4406-92f7-7e9e033e6304"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("05642f93-ba1c-4667-8508-b5327cf49900"),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("cd72f292-e1e3-4743-9533-6a12455078c6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("d1a44c54-d95a-42a3-b6d2-87c63214bd87"),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("b12afac2-7bca-4702-a55d-aa36fee54ee7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            UserId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("cd56f88d-5773-4c2c-88fa-9e92bde8d91c"),
                            CommentId = new Guid("30613838-1c70-4f96-9d8c-559e3461c68c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("37795ed5-9e2b-4ef6-a16b-af21bff4c6ca"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("fd75f018-abbc-45b0-b691-112abc1a2811"),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("de848a80-1588-41e1-952c-551668a64994"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("0d615659-569d-40a8-80d9-6aa6a6148956"),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("b181bb15-3236-4328-b94b-6defb3b8b489"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("0c063b59-dd86-4e01-8ce7-5d9dcb36838b"),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("0a864eed-7eae-41fe-b617-9704c7417360"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            UserId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("3ff3dcfd-b839-40cd-8fa8-c19696314212"),
                            CommentId = new Guid("3b9dabc5-b365-4a45-979d-0cee670d140f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("4afde064-99e3-4260-b0a9-04faca20cf3c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("3c41c506-80b3-4742-a44d-10e4dc8f9fe4"),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("eb677eda-60ea-4315-be1a-327ec60bdebe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("f62048e4-b462-4164-9efb-9420fc35e93f"),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("05d923aa-a035-45b6-80c9-8bd19ee53bba"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("752f4314-24bd-485d-bf0c-85e3fe303ea4"),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("ecdf4edd-0600-4ce1-9b17-f0d4de102888"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            UserId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("33daac7a-3372-4ef9-be4a-b110a11677d0"),
                            CommentId = new Guid("66a051b9-f45f-47a2-bfab-3d5b97d2122f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("c679b181-647e-4f02-b697-62c78728f654"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("cf237311-a526-4c1a-8ba8-4c1bb661ba71"),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        },
                        new
                        {
                            Id = new Guid("91602c7a-60c5-4491-a671-d468e05ca621"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("4a627a97-ea01-4e3d-b405-cafa8eaa46f6"),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        },
                        new
                        {
                            Id = new Guid("5861105b-4b92-4caa-b7a1-582048c4e193"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("1c8ab47f-928e-4604-a37c-f22ec7306b9d"),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        },
                        new
                        {
                            Id = new Guid("50d245f2-96f0-4976-b21f-93f845e0e4c9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            UserId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        },
                        new
                        {
                            Id = new Guid("92e2cc61-739d-40c0-b1a5-9fbba65c5983"),
                            CommentId = new Guid("40316343-3146-4a5e-a6d6-9d3f3765b38a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            AuthorId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(1023),
                            Description = "Приходьте до мене сьогодні в джакузі, тут весело. Про оплату потім.",
                            Title = "Джакузі з скінхедом"
                        },
                        new
                        {
                            Id = new Guid("d1a44c54-d95a-42a3-b6d2-87c63214bd87"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(1070),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("0c063b59-dd86-4e01-8ce7-5d9dcb36838b"),
                            AuthorId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(1084),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("752f4314-24bd-485d-bf0c-85e3fe303ea4"),
                            AuthorId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(1104),
                            Description = "Хтось цікавиться проведенням вечірки вдома з настільними іграми? Я маю гарну колекцію ігор і шукаю компанію для веселого проведення вечора. Приєднуйтесь!",
                            Title = "Вечірка вдома з настільними іграми"
                        },
                        new
                        {
                            Id = new Guid("1c8ab47f-928e-4604-a37c-f22ec7306b9d"),
                            AuthorId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(1120),
                            Description = "Шукаю людей, які так само захоплені гуртом 'Rammstein' і хотіли б піти на їхній концерт. Разом буде набагато веселіше! Хто бажає долучитися?",
                            Title = "Концерт Rammstein"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PartyTags");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            TagId = new Guid("4c6665dd-994d-49d7-abe5-b77b35f4be8d")
                        },
                        new
                        {
                            PartyId = new Guid("d1a44c54-d95a-42a3-b6d2-87c63214bd87"),
                            TagId = new Guid("3b821ecd-de88-47c0-b365-3485847b6250")
                        },
                        new
                        {
                            PartyId = new Guid("0c063b59-dd86-4e01-8ce7-5d9dcb36838b"),
                            TagId = new Guid("8d162146-4b15-48fe-bbe0-05e2e0966394")
                        },
                        new
                        {
                            PartyId = new Guid("752f4314-24bd-485d-bf0c-85e3fe303ea4"),
                            TagId = new Guid("2520cdf3-3932-4ed9-ba8c-f9d9149f8465")
                        },
                        new
                        {
                            PartyId = new Guid("1c8ab47f-928e-4604-a37c-f22ec7306b9d"),
                            TagId = new Guid("edd728e1-76d4-4c01-8f34-5e9ec75a6a95")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PartyUsers");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("ce5ba483-4819-4e14-a6b8-6384ca3f2bcb"),
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            PartyId = new Guid("d1a44c54-d95a-42a3-b6d2-87c63214bd87"),
                            UserId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            PartyId = new Guid("0c063b59-dd86-4e01-8ce7-5d9dcb36838b"),
                            UserId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            PartyId = new Guid("752f4314-24bd-485d-bf0c-85e3fe303ea4"),
                            UserId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            PartyId = new Guid("1c8ab47f-928e-4604-a37c-f22ec7306b9d"),
                            UserId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1eca53eb-6141-4e3e-9f88-9a18f98e193e"),
                            Phone = "+380687654587",
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0")
                        },
                        new
                        {
                            Id = new Guid("64527ab2-d142-42fa-9147-5177bac0b26f"),
                            Phone = "+380988234901",
                            UserId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab")
                        },
                        new
                        {
                            Id = new Guid("aa31ebe0-3f58-439b-b38b-24b5fe99da9a"),
                            Phone = "+380660981292",
                            UserId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd")
                        },
                        new
                        {
                            Id = new Guid("8040df02-f810-4de8-80a3-d8cb7dd9d0f9"),
                            Phone = "+380508672351",
                            UserId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f")
                        },
                        new
                        {
                            Id = new Guid("36a287b9-5d74-4289-bb88-64b1323d4558"),
                            Phone = "+380955647834",
                            UserId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda"),
                            AuthorId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(527),
                            Description = "Карпати інфо шахраї! Я забронювала собі номер в одній з камер Азкабану, але дементори мене туди не впустили. Це жах!",
                            Title = "Увага!"
                        },
                        new
                        {
                            Id = new Guid("51e9de90-76be-4f27-8bd4-6b5c2937099a"),
                            AuthorId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            CreatedDate = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(641),
                            Description = "Нещодавно повернулися з унікальної подорожі до Карпат і просто захоплюємося цим мальовничим куточком природи. Гірські ландшафти та заповідні ліси залишили незабутні враження в нашій пам'яті. Рекомендуємо всім любителям пригод відвідати цю частину України!",
                            Title = "Незабутні враження від Карпат"
                        },
                        new
                        {
                            Id = new Guid("fd75f018-abbc-45b0-b691-112abc1a2811"),
                            AuthorId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            CreatedDate = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(658),
                            Description = "Під час нашої поїздки в Карпати ми не лише насолоджувалися природою, але й смакували справжні кулінарні шедеври. Місцеві страви, такі як вершкові гриби та банош, просто вражають своїм неповторним смаком. Рекомендуємо спробувати!",
                            Title = "Смаколики Карпатської кухні"
                        },
                        new
                        {
                            Id = new Guid("3c41c506-80b3-4742-a44d-10e4dc8f9fe4"),
                            AuthorId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            CreatedDate = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(675),
                            Description = "Під час наших пішохідних прогулянок по Карпатах ми були просто зачаровані мальовничими пейзажами, які відкривалися перед нами. Гірські потоки, зелені луки та красиві гори - все це створює незабутню атмосферу та надихає на нові відкриття. Рекомендуємо це місце для всіх любителів активного відпочинку та красивої природи!",
                            Title = "Неймовірні пейзажі Карпат"
                        },
                        new
                        {
                            Id = new Guid("cf237311-a526-4c1a-8ba8-4c1bb661ba71"),
                            AuthorId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            CreatedDate = new DateTime(2023, 6, 11, 19, 37, 11, 878, DateTimeKind.Local).AddTicks(691),
                            Description = "Наша зимова подорож до Карпат принесла нам незабутні враження від катання на лижах. Добре обладнані гірськолижні курорти та різноманітні траси задовольнять навіть найвибагливіших любителів лижного спорту. Насолоджуйтесь зимовими пригодами у Карпатах!",
                            Title = "Зимові пригоди у Карпатах"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("3fe067b7-9ca6-4f93-bcc2-2560087adfda"),
                            TagId = new Guid("4c6665dd-994d-49d7-abe5-b77b35f4be8d")
                        },
                        new
                        {
                            PostId = new Guid("51e9de90-76be-4f27-8bd4-6b5c2937099a"),
                            TagId = new Guid("3b821ecd-de88-47c0-b365-3485847b6250")
                        },
                        new
                        {
                            PostId = new Guid("fd75f018-abbc-45b0-b691-112abc1a2811"),
                            TagId = new Guid("8d162146-4b15-48fe-bbe0-05e2e0966394")
                        },
                        new
                        {
                            PostId = new Guid("3c41c506-80b3-4742-a44d-10e4dc8f9fe4"),
                            TagId = new Guid("2520cdf3-3932-4ed9-ba8c-f9d9149f8465")
                        },
                        new
                        {
                            PostId = new Guid("cf237311-a526-4c1a-8ba8-4c1bb661ba71"),
                            TagId = new Guid("edd728e1-76d4-4c01-8f34-5e9ec75a6a95")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ff06725-fc1b-4f21-813f-aecbbcf94ab5"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("240cf5d2-f6aa-402f-bceb-8cbd572aeaab"),
                            Name = "Resident"
                        },
                        new
                        {
                            Id = new Guid("dc4832f8-2fe9-4307-bbe5-83fed639e4e2"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c6665dd-994d-49d7-abe5-b77b35f4be8d"),
                            Name = "Лижі"
                        },
                        new
                        {
                            Id = new Guid("3b821ecd-de88-47c0-b365-3485847b6250"),
                            Name = "Сноуборд"
                        },
                        new
                        {
                            Id = new Guid("8d162146-4b15-48fe-bbe0-05e2e0966394"),
                            Name = "Настільні ігри"
                        },
                        new
                        {
                            Id = new Guid("2520cdf3-3932-4ed9-ba8c-f9d9149f8465"),
                            Name = "Велосипед"
                        },
                        new
                        {
                            Id = new Guid("edd728e1-76d4-4c01-8f34-5e9ec75a6a95"),
                            Name = "Кемпінг"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harrypotter@gmail.com",
                            FirstName = "Гаррі",
                            LastName = "Поттер",
                            Password = "password",
                            Rating = 3.5m,
                            RoleId = new Guid("3ff06725-fc1b-4f21-813f-aecbbcf94ab5")
                        },
                        new
                        {
                            Id = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatakae@gmail.com",
                            FirstName = "Еран",
                            LastName = "Єґа",
                            Password = "password",
                            Rating = 1.5m,
                            RoleId = new Guid("240cf5d2-f6aa-402f-bceb-8cbd572aeaab")
                        },
                        new
                        {
                            Id = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "killing.monsters@gmail.com",
                            FirstName = "Ґеральт",
                            LastName = "з Рівії",
                            Password = "password",
                            Rating = 4.5m,
                            RoleId = new Guid("dc4832f8-2fe9-4307-bbe5-83fed639e4e2")
                        },
                        new
                        {
                            Id = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "not.exist@gmail.com",
                            FirstName = "Тайлер",
                            LastName = "Дьорден",
                            Password = "password",
                            Rating = 5.0m,
                            RoleId = new Guid("240cf5d2-f6aa-402f-bceb-8cbd572aeaab")
                        },
                        new
                        {
                            Id = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bossofthegym@gmail.com",
                            FirstName = "Біллі",
                            LastName = "Герінґтон",
                            Password = "password",
                            Rating = 2.5m,
                            RoleId = new Guid("240cf5d2-f6aa-402f-bceb-8cbd572aeaab")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("998a7789-1aee-4dc7-9731-9610c0abd7d0"),
                            TagId = new Guid("4c6665dd-994d-49d7-abe5-b77b35f4be8d")
                        },
                        new
                        {
                            UserId = new Guid("4ecc155b-f373-4b7c-965b-d6efbb46f2ab"),
                            TagId = new Guid("3b821ecd-de88-47c0-b365-3485847b6250")
                        },
                        new
                        {
                            UserId = new Guid("e81b937b-e3ad-4446-b7c7-fe8e77ce22fd"),
                            TagId = new Guid("8d162146-4b15-48fe-bbe0-05e2e0966394")
                        },
                        new
                        {
                            UserId = new Guid("f3fb177f-b3f0-4ee3-a6ac-d262c80a888f"),
                            TagId = new Guid("2520cdf3-3932-4ed9-ba8c-f9d9149f8465")
                        },
                        new
                        {
                            UserId = new Guid("a9a3cc65-9d71-48da-b2bb-2ac9adc16256"),
                            TagId = new Guid("edd728e1-76d4-4c01-8f34-5e9ec75a6a95")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Comments")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Comments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("CommentsSended")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Favors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("FavorTags")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("FavorTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Favor");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Images")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Images")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Likes")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Likes")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("LikesSended")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Comment");

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Parties")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyTags")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PartyTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyUsers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PartyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PhoneNumber", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavorTags");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PartyTags");

                    b.Navigation("PartyUsers");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Navigation("FavorTags");

                    b.Navigation("PartyTags");

                    b.Navigation("PostTags");

                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsSended");

                    b.Navigation("Favors");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("LikesSended");

                    b.Navigation("Parties");

                    b.Navigation("PartyUsers");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Posts");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
