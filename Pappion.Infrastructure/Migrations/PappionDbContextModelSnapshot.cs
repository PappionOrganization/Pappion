// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappion.Infrastructure;

#nullable disable

namespace Pappion.Infrastructure.Migrations
{
    [DbContext(typeof(PappionDbContext))]
    partial class PappionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89b5d50b-1281-4875-a49b-c3fdb39ccfd8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("01c01814-a35f-46c5-8521-08015228158a"),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            Text = "Увага! це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("0898139f-fa1a-475e-b19e-54a362dd4bd0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("d8c03f32-1eda-40a2-9377-7b107539a43d"),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            Text = "Джакузі з скінхедом це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("d3be419e-2fcb-48c4-b1c1-c1075d26741d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("a1059469-9acf-4fa3-b6f5-ce437042e3b7"),
                            Grade = 0m,
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            Text = "Масаж це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("4ce01b9d-0094-4eea-98f1-dff4c6cf216d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            Text = "Гаррі це дуже файний пацан! Стоп...",
                            UserId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("19110e71-fd10-49b0-aa97-2cbd503ac32d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("99736e16-8173-477e-90b8-d3b467ee8460"),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            Text = "Незабутні враження від Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("38578da6-85db-4c93-90fe-963b9d0b4117"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("da63af63-542f-41ad-8276-223af79cdad9"),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("4f54d4af-99e4-497b-a01b-2b39c9777f88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("3127b0e9-8f03-405c-bf71-08e17249be40"),
                            Grade = 0m,
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            Text = "Косметична процедура це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("7893311b-2ead-4c23-884e-535a04bae88f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            Text = "Еран це дуже файний пацан! Стоп...",
                            UserId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("75572980-d4e4-4f06-9ffb-a37779a75fac"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("e523f001-beba-4f8e-8534-f164cb2c543d"),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            Text = "Смаколики Карпатської кухні це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("d9eba05e-bb8d-4c19-880f-efac9a73867b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("efb9e3fc-7131-4b45-b25a-d7709bcbde2a"),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("1afe714a-7cfb-4c54-bd6f-62b114c89c6f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("d5089a61-3f8a-43f4-999b-e902e474aebc"),
                            Grade = 0m,
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            Text = "Персональний тренер це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("e4f595b5-5b1e-4850-af0b-4fdfaf6a447b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            Text = "Ґеральт це дуже файний пацан! Стоп...",
                            UserId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("d1b0bec8-0843-45a7-951c-771f5dc994a8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("f113ca39-4d84-48d5-a489-c02db46670b3"),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            Text = "Неймовірні пейзажі Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("ef842430-0294-4f40-a61e-306f0f66469a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("92c82bdf-7f59-44fb-85f8-0bd0d2c4968c"),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            Text = "Вечірка вдома з настільними іграми це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("1725dd4e-3d4d-4cc2-93ac-6d101536ae5d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("6f469cff-838e-49ae-ac35-3722550210b8"),
                            Grade = 0m,
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            Text = "Ретельна манікюр і педикюр це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("ec26777b-4bbd-4c5a-8a1f-c00c9e043822"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            Text = "Тайлер це дуже файний пацан! Стоп...",
                            UserId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("07cef633-7245-4107-81c1-27c6611ed0b1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("45855f35-5c0f-4b4b-b36c-8c99cb647f11"),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            Text = "Зимові пригоди у Карпатах це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("31786d76-9b59-4e7d-bdb5-5a9379cd9107"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("8bb35c25-d015-41b5-981c-cd1da5c71734"),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            Text = "Концерт Rammstein це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("f0d6f08b-a733-4b11-9225-a2d657b727a0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("ebf3a38f-dbc0-4a39-8a23-021f1bf0677a"),
                            Grade = 0m,
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            Text = "Сеанс йоги це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("1f02174e-57ac-491e-9214-c8d4df42f884"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            Text = "Біллі це дуже файний пацан! Стоп...",
                            UserId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1059469-9acf-4fa3-b6f5-ce437042e3b7"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Найкращі майстри масажу готові показати всі свої вміння на вашій задубілій спині.",
                            Price = 50.5m,
                            Title = "Масаж"
                        },
                        new
                        {
                            Id = new Guid("3127b0e9-8f03-405c-bf71-08e17249be40"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Отримайте розкішну косметичну процедуру, яка підкреслить вашу природну красу і зробить вашу шкіру сяючою.",
                            Price = 80.0m,
                            Title = "Косметична процедура"
                        },
                        new
                        {
                            Id = new Guid("d5089a61-3f8a-43f4-999b-e902e474aebc"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Досвідчений тренер допоможе вам досягнути ваших фітнес-цілей, розробивши індивідуальну тренувальну програму для вас.",
                            Price = 70.2m,
                            Title = "Персональний тренер"
                        },
                        new
                        {
                            Id = new Guid("6f469cff-838e-49ae-ac35-3722550210b8"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розкішний манікюр і педикюр, який зробить ваші нігті і ніжки неймовірно чудовими і доглянутими.",
                            Price = 45.8m,
                            Title = "Ретельна манікюр і педикюр"
                        },
                        new
                        {
                            Id = new Guid("ebf3a38f-dbc0-4a39-8a23-021f1bf0677a"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розслабтеся і зосередьтеся на своєму тілі та розумі під час особистого сеансу йоги з досвідченим інструктором.",
                            Price = 55.3m,
                            Title = "Сеанс йоги"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0f99ed2-8f07-4471-a837-5c0ab310dfc8"),
                            Path = "06e2aeb0-6d00-46df-bb33-5f20b5eafde9.png",
                            UserId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("508b8fc3-a20a-49c3-b938-3f387f44f7d6"),
                            Path = "dcc359ce-db8d-48e5-93ff-a6be972428af.png",
                            PostId = new Guid("01c01814-a35f-46c5-8521-08015228158a")
                        },
                        new
                        {
                            Id = new Guid("15d17603-83b9-4482-b4c2-1fb3311de276"),
                            PartyId = new Guid("d8c03f32-1eda-40a2-9377-7b107539a43d"),
                            Path = "157b02ad-ddd1-4424-a476-65c649e32f40.png"
                        },
                        new
                        {
                            Id = new Guid("74201d6d-46bb-4429-8711-d14cdfde32b6"),
                            FavorId = new Guid("a1059469-9acf-4fa3-b6f5-ce437042e3b7"),
                            Path = "280a87bc-a9d1-4497-a73b-71ba7c4324e2.png"
                        },
                        new
                        {
                            Id = new Guid("b94db1fc-a591-4316-a999-3a82934e73fc"),
                            Path = "da96f905-a21e-4b79-bf59-b782c08e2f61.png",
                            UserId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("4a2d35df-8105-4753-be0e-c0cc4d3344b6"),
                            Path = "1e1e0fc2-5ed1-4837-b6af-8d3ee67740ab.png",
                            PostId = new Guid("99736e16-8173-477e-90b8-d3b467ee8460")
                        },
                        new
                        {
                            Id = new Guid("375fe58d-f9ac-4bb6-9416-f3a33e9d0ab7"),
                            PartyId = new Guid("da63af63-542f-41ad-8276-223af79cdad9"),
                            Path = "ae8cb79f-4f90-4cca-b70e-95f9b2b05267.png"
                        },
                        new
                        {
                            Id = new Guid("658ffa8a-443d-470b-ad8a-8e6641040f99"),
                            FavorId = new Guid("3127b0e9-8f03-405c-bf71-08e17249be40"),
                            Path = "52d1e54d-e44b-44ed-884e-90b5d5413e2f.png"
                        },
                        new
                        {
                            Id = new Guid("b0177e9f-cd51-499a-9cd3-e223a6a4a61a"),
                            Path = "43fd2c3b-f056-4298-b0e0-6f96fb61932d.png",
                            UserId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("12ad28d0-7a1c-41cd-875f-266e72110337"),
                            Path = "14348b12-e3bb-46ef-9ecd-91e0de3304a9.png",
                            PostId = new Guid("e523f001-beba-4f8e-8534-f164cb2c543d")
                        },
                        new
                        {
                            Id = new Guid("18479017-89e1-4d73-8524-5038d69e8dcf"),
                            PartyId = new Guid("efb9e3fc-7131-4b45-b25a-d7709bcbde2a"),
                            Path = "9bc3b45c-6503-40f4-8208-09b74cae9d08.png"
                        },
                        new
                        {
                            Id = new Guid("5b063914-76a1-4d6b-8663-bc352fcee751"),
                            FavorId = new Guid("d5089a61-3f8a-43f4-999b-e902e474aebc"),
                            Path = "0ee49abf-b94e-4a8b-b37a-d04808ebe320.png"
                        },
                        new
                        {
                            Id = new Guid("6c8f6df0-1f0d-4859-9e55-b2235d1a7f46"),
                            Path = "94e023f3-a1bd-4e3a-b79a-3efa582258b8.png",
                            UserId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("2d07d0f9-1d16-4a20-8d67-05dda9d9684a"),
                            Path = "554f7b1c-a264-4c51-b371-0904b17f2f08.png",
                            PostId = new Guid("f113ca39-4d84-48d5-a489-c02db46670b3")
                        },
                        new
                        {
                            Id = new Guid("22130ecf-7c16-4384-8f47-185a19706596"),
                            PartyId = new Guid("92c82bdf-7f59-44fb-85f8-0bd0d2c4968c"),
                            Path = "5bfbad97-d3c0-48db-aa08-fe60ceacc6f7.png"
                        },
                        new
                        {
                            Id = new Guid("a4b6501d-4ede-4398-b7dc-0af8b552eed2"),
                            FavorId = new Guid("6f469cff-838e-49ae-ac35-3722550210b8"),
                            Path = "2a46de4d-e988-4438-b322-b597710eda22.png"
                        },
                        new
                        {
                            Id = new Guid("52659c69-1597-46b5-811e-150a9b7956a2"),
                            Path = "f4026c7b-4153-4fd2-96cb-7e6a3bd0f49e.png",
                            UserId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        },
                        new
                        {
                            Id = new Guid("19137bbf-3387-412d-ac33-e68a78f4fff2"),
                            Path = "5275fffe-7c2f-4626-9253-df5ea1b23e84.png",
                            PostId = new Guid("45855f35-5c0f-4b4b-b36c-8c99cb647f11")
                        },
                        new
                        {
                            Id = new Guid("3c987f0c-2d59-4482-9001-d2192dbf1672"),
                            PartyId = new Guid("8bb35c25-d015-41b5-981c-cd1da5c71734"),
                            Path = "defab249-2c4b-4818-bf73-ee7422d5be9b.png"
                        },
                        new
                        {
                            Id = new Guid("795b699f-fdf2-4d69-8110-ba7da9e6eaba"),
                            FavorId = new Guid("ebf3a38f-dbc0-4a39-8a23-021f1bf0677a"),
                            Path = "c0e25481-1a6c-4e08-9302-3620e61f06ef.png"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a164e34-9bd9-4f29-9d6e-2bd29649e0ff"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("01c01814-a35f-46c5-8521-08015228158a"),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("9bba682e-2f9d-446a-bc5e-723c02624a9b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("a1059469-9acf-4fa3-b6f5-ce437042e3b7"),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("8ebc3248-99b6-4f79-8aed-1b1d958c8e77"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("d8c03f32-1eda-40a2-9377-7b107539a43d"),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("d34dcb18-ff8c-4b63-b7ba-576a29834fdc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            UserId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("fd634a56-3243-4d42-b3be-2c22f05106bc"),
                            CommentId = new Guid("89b5d50b-1281-4875-a49b-c3fdb39ccfd8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            Id = new Guid("b463a8b0-12cb-406d-966c-b36fb3108dcf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("99736e16-8173-477e-90b8-d3b467ee8460"),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("a0de6405-0e8c-44f8-8fbf-0b7a3efe1f4b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("3127b0e9-8f03-405c-bf71-08e17249be40"),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("aa44a4d0-6652-4cd5-98ae-38b97df964e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("da63af63-542f-41ad-8276-223af79cdad9"),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("7f962245-b5d3-4e78-a3c0-b84cbf840733"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            UserId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("05efa2dd-7eb1-495d-af6e-83ad13b04808"),
                            CommentId = new Guid("0898139f-fa1a-475e-b19e-54a362dd4bd0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            Id = new Guid("b4b93cd3-5fec-448d-9978-1bcd3ab7f07c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("e523f001-beba-4f8e-8534-f164cb2c543d"),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("f5d43b30-9a46-4815-b9cd-8492c67b4b57"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("d5089a61-3f8a-43f4-999b-e902e474aebc"),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("3bc75891-9541-442f-a0b5-639f0928c0e5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("efb9e3fc-7131-4b45-b25a-d7709bcbde2a"),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("16b9fec8-9da2-4dcc-bac9-f8d333c06d9e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            UserId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("b9c8c0a5-8727-4a27-89f8-f15782f41728"),
                            CommentId = new Guid("d3be419e-2fcb-48c4-b1c1-c1075d26741d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            Id = new Guid("84ed742d-0345-4379-8281-44ae7f2872bc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("f113ca39-4d84-48d5-a489-c02db46670b3"),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("ccf29cdd-84f7-425e-838c-f535452cf79c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("6f469cff-838e-49ae-ac35-3722550210b8"),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("f1745e0c-f987-4547-ba02-295f9851e217"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("92c82bdf-7f59-44fb-85f8-0bd0d2c4968c"),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("2546f21a-5725-47e2-bc96-a082afeb53aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            UserId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("36d26682-1246-4002-a6b8-df40dd086710"),
                            CommentId = new Guid("4ce01b9d-0094-4eea-98f1-dff4c6cf216d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            Id = new Guid("c88b4a03-670c-4348-98b6-32e9abbfd5e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("45855f35-5c0f-4b4b-b36c-8c99cb647f11"),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        },
                        new
                        {
                            Id = new Guid("9390ec61-457f-40e4-80e0-bc5dded2ce2f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("ebf3a38f-dbc0-4a39-8a23-021f1bf0677a"),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        },
                        new
                        {
                            Id = new Guid("5573c391-545e-4f5b-81b2-9e7d0c270de4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("8bb35c25-d015-41b5-981c-cd1da5c71734"),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        },
                        new
                        {
                            Id = new Guid("9bd58f4b-ea29-443f-968a-0c4c513b79f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            UserId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        },
                        new
                        {
                            Id = new Guid("1d246b47-40d4-40ff-9656-df60670f412a"),
                            CommentId = new Guid("19110e71-fd10-49b0-aa97-2cbd503ac32d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8c03f32-1eda-40a2-9377-7b107539a43d"),
                            AuthorId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2657),
                            Description = "Приходьте до мене сьогодні в джакузі, тут весело. Про оплату потім.",
                            Title = "Джакузі з скінхедом"
                        },
                        new
                        {
                            Id = new Guid("da63af63-542f-41ad-8276-223af79cdad9"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2671),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("efb9e3fc-7131-4b45-b25a-d7709bcbde2a"),
                            AuthorId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2681),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("92c82bdf-7f59-44fb-85f8-0bd0d2c4968c"),
                            AuthorId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2691),
                            Description = "Хтось цікавиться проведенням вечірки вдома з настільними іграми? Я маю гарну колекцію ігор і шукаю компанію для веселого проведення вечора. Приєднуйтесь!",
                            Title = "Вечірка вдома з настільними іграми"
                        },
                        new
                        {
                            Id = new Guid("8bb35c25-d015-41b5-981c-cd1da5c71734"),
                            AuthorId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2701),
                            Description = "Шукаю людей, які так само захоплені гуртом 'Rammstein' і хотіли б піти на їхній концерт. Разом буде набагато веселіше! Хто бажає долучитися?",
                            Title = "Концерт Rammstein"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PartyUsers");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("d8c03f32-1eda-40a2-9377-7b107539a43d"),
                            UserId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978")
                        },
                        new
                        {
                            PartyId = new Guid("da63af63-542f-41ad-8276-223af79cdad9"),
                            UserId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43")
                        },
                        new
                        {
                            PartyId = new Guid("efb9e3fc-7131-4b45-b25a-d7709bcbde2a"),
                            UserId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc")
                        },
                        new
                        {
                            PartyId = new Guid("92c82bdf-7f59-44fb-85f8-0bd0d2c4968c"),
                            UserId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4")
                        },
                        new
                        {
                            PartyId = new Guid("8bb35c25-d015-41b5-981c-cd1da5c71734"),
                            UserId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01c01814-a35f-46c5-8521-08015228158a"),
                            AuthorId = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2446),
                            Description = "Карпати інфо шахраї! Я забронювала собі номер в одній з камер Азкабану, але дементори мене туди не впустили. Це жах!",
                            Title = "Увага!"
                        },
                        new
                        {
                            Id = new Guid("99736e16-8173-477e-90b8-d3b467ee8460"),
                            AuthorId = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            CreatedDate = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2532),
                            Description = "Нещодавно повернулися з унікальної подорожі до Карпат і просто захоплюємося цим мальовничим куточком природи. Гірські ландшафти та заповідні ліси залишили незабутні враження в нашій пам'яті. Рекомендуємо всім любителям пригод відвідати цю частину України!",
                            Title = "Незабутні враження від Карпат"
                        },
                        new
                        {
                            Id = new Guid("e523f001-beba-4f8e-8534-f164cb2c543d"),
                            AuthorId = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            CreatedDate = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2543),
                            Description = "Під час нашої поїздки в Карпати ми не лише насолоджувалися природою, але й смакували справжні кулінарні шедеври. Місцеві страви, такі як вершкові гриби та банош, просто вражають своїм неповторним смаком. Рекомендуємо спробувати!",
                            Title = "Смаколики Карпатської кухні"
                        },
                        new
                        {
                            Id = new Guid("f113ca39-4d84-48d5-a489-c02db46670b3"),
                            AuthorId = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            CreatedDate = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2575),
                            Description = "Під час наших пішохідних прогулянок по Карпатах ми були просто зачаровані мальовничими пейзажами, які відкривалися перед нами. Гірські потоки, зелені луки та красиві гори - все це створює незабутню атмосферу та надихає на нові відкриття. Рекомендуємо це місце для всіх любителів активного відпочинку та красивої природи!",
                            Title = "Неймовірні пейзажі Карпат"
                        },
                        new
                        {
                            Id = new Guid("45855f35-5c0f-4b4b-b36c-8c99cb647f11"),
                            AuthorId = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            CreatedDate = new DateTime(2023, 6, 19, 8, 7, 14, 326, DateTimeKind.Local).AddTicks(2586),
                            Description = "Наша зимова подорож до Карпат принесла нам незабутні враження від катання на лижах. Добре обладнані гірськолижні курорти та різноманітні траси задовольнять навіть найвибагливіших любителів лижного спорту. Насолоджуйтесь зимовими пригодами у Карпатах!",
                            Title = "Зимові пригоди у Карпатах"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9ea8cb0-e656-4438-95da-9c4059725978"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harrypotter@gmail.com",
                            FirstName = "Гаррі",
                            LastName = "Поттер",
                            Password = "DG9R0aljenPyGhceYRejqg==;XH0joMmZRCv+NDwsx7BsKzo6cwWBmraxHdQJnVlkMJo=",
                            PhoneNumber = "+38000000000",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("c9f9a6a6-f124-4e44-b0ea-cad967e9ce43"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatakae@gmail.com",
                            FirstName = "Еран",
                            LastName = "Єґа",
                            Password = "36x7Phcr5lftPC71fQ1kdw==;fbZmxHiL44aPOhIrP1762073rP3TndVMsbMqhLXCcco=",
                            PhoneNumber = "+38000000000",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("009e8ec4-0789-4b4d-a7f7-f37e2a0540fc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "killing.monsters@gmail.com",
                            FirstName = "Ґеральт",
                            LastName = "з Рівії",
                            Password = "hQ4L4WihClWmc67eeo+rrg==;ZZuBEySWFApfVAiU7q1lzdTkZM6FT1Eelk7fDqMt15s=",
                            PhoneNumber = "+38000000000",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("5120e53f-7ca5-4867-af64-174e0d5f95a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "not.exist@gmail.com",
                            FirstName = "Тайлер",
                            LastName = "Дьорден",
                            Password = "bvqpoB95ofKetOpvVsgMVg==;eycGGKHWj+UeoO2lg1xLhsA/AJUwdocpDfPc64KUPfU=",
                            PhoneNumber = "+38000000000",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("a082b00f-266b-4f9c-ac6d-281d72fac35a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bossofthegym@gmail.com",
                            FirstName = "Біллі",
                            LastName = "Герінґтон",
                            Password = "u21WoXN0y/VYMXEtMd1+dQ==;hmcnnLJVik/QkrW+LTfdRuFt7zWJ7ioj6AkTh3Z4X6M=",
                            PhoneNumber = "+38000000000",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Comments")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Comments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("CommentsSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Favors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Images")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Images")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithOne("Image")
                        .HasForeignKey("Pappion.Domain.Entities.Image", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Likes")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Likes")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("LikesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Comment");

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Parties")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyUsers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PartyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PartyUsers");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsSent");

                    b.Navigation("Favors");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Likes");

                    b.Navigation("LikesSent");

                    b.Navigation("Parties");

                    b.Navigation("PartyUsers");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
