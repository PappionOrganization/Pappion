// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappion.Infrastructure;

#nullable disable

namespace Pappion.Infrastructure.Migrations
{
    [DbContext(typeof(PappionDbContext))]
    partial class PappionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("805fb50d-d882-4bca-b194-3395a284b87a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022"),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            Text = "Увага! це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("18475644-c2e7-4960-b4e1-48ec9d85747d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            Text = "Джакузі з скінхедом це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("7da1acf6-391c-4bf0-a15f-5ba2a214a0e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            Grade = 0m,
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            Text = "Масаж це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("c7657e6a-9a5b-4681-a3c0-7cf05290c5ec"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            Text = "Гаррі це дуже файний пацан! Стоп...",
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("2a92c894-480e-49b8-a0b7-3b48e35fb7d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("6e225a76-229f-4612-8520-7ce18e230152"),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            Text = "Незабутні враження від Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("b2781706-f750-480e-b4b8-cb5affc8c513"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("3c149159-5346-445e-8d69-762c93385bc7"),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("722ce8a5-5b8c-4c69-948d-236fea99f653"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("1963f4cd-aa31-458f-94be-acf6aac585b5"),
                            Grade = 0m,
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            Text = "Косметична процедура це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("ba4de82d-e3ae-4394-a85f-659ac42cb1f2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            Text = "Еран це дуже файний пацан! Стоп...",
                            UserId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            Id = new Guid("ac2091c6-08ce-499e-b432-c847426a066d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("ac480306-36a8-4fdc-be3d-0779a3402df0"),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            Text = "Смаколики Карпатської кухні це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("879132e9-c0ed-4c05-a800-fe1fc2fd0408"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("6d1a6530-9ffc-4b9b-9fec-6078048aa189"),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("18e4f4fe-a713-48e6-8d58-b44f94e75f89"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("cea5d752-261b-4e45-baca-52323384d270"),
                            Grade = 0m,
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            Text = "Персональний тренер це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("8b8bd0c0-607f-4ef6-805c-640fff4b56f5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            Text = "Ґеральт це дуже файний пацан! Стоп...",
                            UserId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            Id = new Guid("4aaba06e-dde7-41bc-8107-232daf8bfcd8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("3b51d66c-87e9-4134-b036-11fa29157996"),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            Text = "Неймовірні пейзажі Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("1c745497-5249-4d3f-a424-bea2d48408e3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("cf15822a-28de-44cb-afb6-6c2119e330f5"),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            Text = "Вечірка вдома з настільними іграми це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("49da613b-723b-4537-bbb6-977830a33296"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("0e7bb511-a43e-4bf0-bd38-15a1339969d5"),
                            Grade = 0m,
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            Text = "Ретельна манікюр і педикюр це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("396f1e63-67d8-4fb2-b3de-b7077200ca6c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            Text = "Тайлер це дуже файний пацан! Стоп...",
                            UserId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            Id = new Guid("60562eab-858a-4fca-b76b-783706350a75"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("1ba7c717-adf8-4d71-82ba-9e0484c48be8"),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            Text = "Зимові пригоди у Карпатах це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("b38b6d87-e5f1-4fc2-95e6-ddf4c03e05eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("17fd6637-0753-4585-8390-975f162c5dbe"),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            Text = "Концерт Rammstein це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("fff995e6-03f3-4e6d-87d4-58da896bfc48"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("8b5d81cb-57a2-4fe9-98e1-2e571462eca8"),
                            Grade = 0m,
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            Text = "Сеанс йоги це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("03ff2a44-0a24-4744-a0f8-f30f637aed6f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            Text = "Біллі це дуже файний пацан! Стоп...",
                            UserId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Найкращі майстри масажу готові показати всі свої вміння на вашій задубілій спині.",
                            Price = 50.5m,
                            Rating = 0m,
                            Title = "Масаж"
                        },
                        new
                        {
                            Id = new Guid("1963f4cd-aa31-458f-94be-acf6aac585b5"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Отримайте розкішну косметичну процедуру, яка підкреслить вашу природну красу і зробить вашу шкіру сяючою.",
                            Price = 80.0m,
                            Rating = 0m,
                            Title = "Косметична процедура"
                        },
                        new
                        {
                            Id = new Guid("cea5d752-261b-4e45-baca-52323384d270"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Досвідчений тренер допоможе вам досягнути ваших фітнес-цілей, розробивши індивідуальну тренувальну програму для вас.",
                            Price = 70.2m,
                            Rating = 0m,
                            Title = "Персональний тренер"
                        },
                        new
                        {
                            Id = new Guid("0e7bb511-a43e-4bf0-bd38-15a1339969d5"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розкішний манікюр і педикюр, який зробить ваші нігті і ніжки неймовірно чудовими і доглянутими.",
                            Price = 45.8m,
                            Rating = 0m,
                            Title = "Ретельна манікюр і педикюр"
                        },
                        new
                        {
                            Id = new Guid("8b5d81cb-57a2-4fe9-98e1-2e571462eca8"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розслабтеся і зосередьтеся на своєму тілі та розумі під час особистого сеансу йоги з досвідченим інструктором.",
                            Price = 55.3m,
                            Rating = 0m,
                            Title = "Сеанс йоги"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.Property<Guid>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("FavorId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FavorTags");

                    b.HasData(
                        new
                        {
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            TagId = new Guid("9c95410e-3a37-427b-a687-3d7336ee8c18")
                        },
                        new
                        {
                            FavorId = new Guid("1963f4cd-aa31-458f-94be-acf6aac585b5"),
                            TagId = new Guid("5a7a19b9-87a4-4c1e-a604-03ab852bf147")
                        },
                        new
                        {
                            FavorId = new Guid("cea5d752-261b-4e45-baca-52323384d270"),
                            TagId = new Guid("eafbb60f-16cc-4e51-b625-c56cd0f5ea59")
                        },
                        new
                        {
                            FavorId = new Guid("0e7bb511-a43e-4bf0-bd38-15a1339969d5"),
                            TagId = new Guid("c9824fd9-7476-400e-8d62-cead541be3a9")
                        },
                        new
                        {
                            FavorId = new Guid("8b5d81cb-57a2-4fe9-98e1-2e571462eca8"),
                            TagId = new Guid("0985c99a-dbf7-42a6-8bf8-a6ae829a7d2a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19e0903b-3fb0-4b3d-b92c-1350e2d15f6a"),
                            Path = "81b47757-e9ed-4364-9296-61b53253bd72.png",
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("9f2b8259-60c7-40f5-baee-7fbbd5b9121e"),
                            Path = "26a0e876-faac-43d6-ba41-72a0c5de7d56.png",
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022")
                        },
                        new
                        {
                            Id = new Guid("40f878f6-7bff-4d73-8fed-324fe2a7091f"),
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            Path = "da015a1e-a1e7-4559-92a3-911f73ab4aea.png"
                        },
                        new
                        {
                            Id = new Guid("d5c27058-3b09-4a67-a004-e0d8719e1be0"),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            Path = "c181c974-2e89-4cf6-bf52-95e4aa83d4ec.png"
                        },
                        new
                        {
                            Id = new Guid("913da50c-58bd-4dd3-bb1d-c17ddfd64969"),
                            Path = "38d7a129-11cc-49e4-ac1a-5baabab86a3c.png",
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("3a0e9f79-00ae-442a-94de-0004e92c4bf8"),
                            Path = "f6759806-151b-4748-b0d9-d9996ea40d74.png",
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022")
                        },
                        new
                        {
                            Id = new Guid("0ea74556-2684-4a20-8888-56a420ad5a73"),
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            Path = "90ce85ee-a33d-47d0-829f-2572f9689f60.png"
                        },
                        new
                        {
                            Id = new Guid("39072ba9-1140-4e2c-af00-a5a20ab5c520"),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            Path = "cd9f6048-c38a-444b-a691-6abbc742b7f3.png"
                        },
                        new
                        {
                            Id = new Guid("d1fc3f32-ca7f-4c63-9c8b-5ded75932e4c"),
                            Path = "de82377d-b67b-4f00-82b6-a123138406bf.png",
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("89debb75-7c8d-48e8-8121-96e748c3a361"),
                            Path = "e61cbbe3-d6e4-4544-a6c3-3238274bfc5b.png",
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022")
                        },
                        new
                        {
                            Id = new Guid("92d85b9b-8176-49f7-9aaa-09112eef99b4"),
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            Path = "efccdc7f-a337-45de-a978-05d70614a610.png"
                        },
                        new
                        {
                            Id = new Guid("28876f7f-58dd-43c8-957f-de5d8471aaca"),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            Path = "66ddd21b-95e4-4ccf-935c-75d4aca0c328.png"
                        },
                        new
                        {
                            Id = new Guid("859e8faa-9014-411b-8f6d-fb0a9c6fff1f"),
                            Path = "35969ee3-ac41-4134-9b5f-d42aa1e93711.png",
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("bd323d8f-5eac-4fff-960c-406fbfba45e0"),
                            Path = "db8c3760-bb2b-4527-a439-003e10305083.png",
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022")
                        },
                        new
                        {
                            Id = new Guid("5a701a3c-c7e1-423a-b800-cf40c3afdc6c"),
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            Path = "6c002e1e-936b-4059-a740-f669f8af30c3.png"
                        },
                        new
                        {
                            Id = new Guid("7680f199-d4e5-4711-bb5f-edfd14f0c634"),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            Path = "dee4a127-ee97-496b-a23a-6e12d2aade8c.png"
                        },
                        new
                        {
                            Id = new Guid("e64ad630-980b-4b12-a956-a6ddeb98667b"),
                            Path = "44cd1230-d495-498e-b2c5-60be7f924345.png",
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("67aade48-f24a-4f86-bf19-b1c1ac28e1dd"),
                            Path = "f6681ca5-f747-44bd-b5c4-876a85f83c37.png",
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022")
                        },
                        new
                        {
                            Id = new Guid("5bcc8229-eef7-4927-8968-8324952c72c0"),
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            Path = "a6542cd9-2ee8-41f6-b0f4-94b0dfc3131b.png"
                        },
                        new
                        {
                            Id = new Guid("28affac7-484b-43cc-96cf-afc84560133b"),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            Path = "d6db18bd-7b02-481e-bcf0-5f0f0339a89c.png"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("853b1336-680f-49b6-a4f6-43ce3467dab4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022"),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("3f98b2b7-a897-45df-a38e-d378f608c8cc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("f1aca8c1-ebb0-4c4d-9078-0f27ebe599ad"),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("00ac9347-2658-4197-8a9f-69b88f4240eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("0d923871-0f13-488b-b8d0-283bdc5b2f10"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("61edeb00-00ce-463b-9cc3-5b096f74906e"),
                            CommentId = new Guid("805fb50d-d882-4bca-b194-3395a284b87a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            Id = new Guid("b702cabf-688b-4647-b3c9-3b7db6d0c787"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("6e225a76-229f-4612-8520-7ce18e230152"),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            Id = new Guid("740080b3-0f62-41c1-a11a-b88fee402bad"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("1963f4cd-aa31-458f-94be-acf6aac585b5"),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            Id = new Guid("7820d809-7123-4d8b-942a-29eb111f30c9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("3c149159-5346-445e-8d69-762c93385bc7"),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            Id = new Guid("742a81af-8afe-41df-939b-e098a83f7eb7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            UserId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            Id = new Guid("929bdd93-ede3-4d52-8a9b-5b66e9691cfb"),
                            CommentId = new Guid("18475644-c2e7-4960-b4e1-48ec9d85747d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            Id = new Guid("b0401432-25a5-43c5-aca7-c7d17628b0eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("ac480306-36a8-4fdc-be3d-0779a3402df0"),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            Id = new Guid("928a8d95-feca-40d0-8692-824eadae49be"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("cea5d752-261b-4e45-baca-52323384d270"),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            Id = new Guid("6b784199-1318-4920-8451-d625cbdaab19"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("6d1a6530-9ffc-4b9b-9fec-6078048aa189"),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            Id = new Guid("43cea248-a8e7-49a2-8e76-c2b3dd9ea11e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            UserId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            Id = new Guid("cab95d4c-7aed-4bac-bc32-1560fe8a562a"),
                            CommentId = new Guid("7da1acf6-391c-4bf0-a15f-5ba2a214a0e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            Id = new Guid("b567687d-e407-403b-97ab-22140eadc7c3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("3b51d66c-87e9-4134-b036-11fa29157996"),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            Id = new Guid("1e10a7d9-4908-44db-830d-c6e0b4a736bb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("0e7bb511-a43e-4bf0-bd38-15a1339969d5"),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            Id = new Guid("3ae378b9-506d-48a3-9d43-c17ea0bb8381"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("cf15822a-28de-44cb-afb6-6c2119e330f5"),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            Id = new Guid("af9cad7c-6c90-451a-9e49-7f0b5bf3658b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            UserId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            Id = new Guid("3dbdc355-d651-4432-ac36-edf954bd4c98"),
                            CommentId = new Guid("c7657e6a-9a5b-4681-a3c0-7cf05290c5ec"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            Id = new Guid("5cb12d12-7f92-414c-b686-6b497e101f3e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("1ba7c717-adf8-4d71-82ba-9e0484c48be8"),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        },
                        new
                        {
                            Id = new Guid("9857260b-791c-464c-82bf-f6cf4b5c8e57"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("8b5d81cb-57a2-4fe9-98e1-2e571462eca8"),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        },
                        new
                        {
                            Id = new Guid("14756768-ebc1-4307-b38a-4dcd79ec9d2c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("17fd6637-0753-4585-8390-975f162c5dbe"),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        },
                        new
                        {
                            Id = new Guid("350b9eaf-7b43-49e8-b9fc-44f960409200"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            UserId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        },
                        new
                        {
                            Id = new Guid("1366fb8c-928c-4e57-ae55-778b1ad1071f"),
                            CommentId = new Guid("2a92c894-480e-49b8-a0b7-3b48e35fb7d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            AuthorId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6575),
                            Description = "Приходьте до мене сьогодні в джакузі, тут весело. Про оплату потім.",
                            Title = "Джакузі з скінхедом"
                        },
                        new
                        {
                            Id = new Guid("3c149159-5346-445e-8d69-762c93385bc7"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6582),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("6d1a6530-9ffc-4b9b-9fec-6078048aa189"),
                            AuthorId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6586),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("cf15822a-28de-44cb-afb6-6c2119e330f5"),
                            AuthorId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6591),
                            Description = "Хтось цікавиться проведенням вечірки вдома з настільними іграми? Я маю гарну колекцію ігор і шукаю компанію для веселого проведення вечора. Приєднуйтесь!",
                            Title = "Вечірка вдома з настільними іграми"
                        },
                        new
                        {
                            Id = new Guid("17fd6637-0753-4585-8390-975f162c5dbe"),
                            AuthorId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6595),
                            Description = "Шукаю людей, які так само захоплені гуртом 'Rammstein' і хотіли б піти на їхній концерт. Разом буде набагато веселіше! Хто бажає долучитися?",
                            Title = "Концерт Rammstein"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PartyTags");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            TagId = new Guid("9c95410e-3a37-427b-a687-3d7336ee8c18")
                        },
                        new
                        {
                            PartyId = new Guid("3c149159-5346-445e-8d69-762c93385bc7"),
                            TagId = new Guid("5a7a19b9-87a4-4c1e-a604-03ab852bf147")
                        },
                        new
                        {
                            PartyId = new Guid("6d1a6530-9ffc-4b9b-9fec-6078048aa189"),
                            TagId = new Guid("eafbb60f-16cc-4e51-b625-c56cd0f5ea59")
                        },
                        new
                        {
                            PartyId = new Guid("cf15822a-28de-44cb-afb6-6c2119e330f5"),
                            TagId = new Guid("c9824fd9-7476-400e-8d62-cead541be3a9")
                        },
                        new
                        {
                            PartyId = new Guid("17fd6637-0753-4585-8390-975f162c5dbe"),
                            TagId = new Guid("0985c99a-dbf7-42a6-8bf8-a6ae829a7d2a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PartyUsers");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("8dda8f2f-9812-4a1f-8abb-d6d95776158f"),
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11")
                        },
                        new
                        {
                            PartyId = new Guid("3c149159-5346-445e-8d69-762c93385bc7"),
                            UserId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a")
                        },
                        new
                        {
                            PartyId = new Guid("6d1a6530-9ffc-4b9b-9fec-6078048aa189"),
                            UserId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a")
                        },
                        new
                        {
                            PartyId = new Guid("cf15822a-28de-44cb-afb6-6c2119e330f5"),
                            UserId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018")
                        },
                        new
                        {
                            PartyId = new Guid("17fd6637-0753-4585-8390-975f162c5dbe"),
                            UserId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50260eee-ed09-467f-bb89-2171c9de3022"),
                            AuthorId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6459),
                            Description = "Карпати інфо шахраї! Я забронювала собі номер в одній з камер Азкабану, але дементори мене туди не впустили. Це жах!",
                            Title = "Увага!"
                        },
                        new
                        {
                            Id = new Guid("6e225a76-229f-4612-8520-7ce18e230152"),
                            AuthorId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            CreatedDate = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6510),
                            Description = "Нещодавно повернулися з унікальної подорожі до Карпат і просто захоплюємося цим мальовничим куточком природи. Гірські ландшафти та заповідні ліси залишили незабутні враження в нашій пам'яті. Рекомендуємо всім любителям пригод відвідати цю частину України!",
                            Title = "Незабутні враження від Карпат"
                        },
                        new
                        {
                            Id = new Guid("ac480306-36a8-4fdc-be3d-0779a3402df0"),
                            AuthorId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            CreatedDate = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6515),
                            Description = "Під час нашої поїздки в Карпати ми не лише насолоджувалися природою, але й смакували справжні кулінарні шедеври. Місцеві страви, такі як вершкові гриби та банош, просто вражають своїм неповторним смаком. Рекомендуємо спробувати!",
                            Title = "Смаколики Карпатської кухні"
                        },
                        new
                        {
                            Id = new Guid("3b51d66c-87e9-4134-b036-11fa29157996"),
                            AuthorId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            CreatedDate = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6542),
                            Description = "Під час наших пішохідних прогулянок по Карпатах ми були просто зачаровані мальовничими пейзажами, які відкривалися перед нами. Гірські потоки, зелені луки та красиві гори - все це створює незабутню атмосферу та надихає на нові відкриття. Рекомендуємо це місце для всіх любителів активного відпочинку та красивої природи!",
                            Title = "Неймовірні пейзажі Карпат"
                        },
                        new
                        {
                            Id = new Guid("1ba7c717-adf8-4d71-82ba-9e0484c48be8"),
                            AuthorId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            CreatedDate = new DateTime(2023, 6, 15, 23, 5, 5, 158, DateTimeKind.Local).AddTicks(6547),
                            Description = "Наша зимова подорож до Карпат принесла нам незабутні враження від катання на лижах. Добре обладнані гірськолижні курорти та різноманітні траси задовольнять навіть найвибагливіших любителів лижного спорту. Насолоджуйтесь зимовими пригодами у Карпатах!",
                            Title = "Зимові пригоди у Карпатах"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("50260eee-ed09-467f-bb89-2171c9de3022"),
                            TagId = new Guid("9c95410e-3a37-427b-a687-3d7336ee8c18")
                        },
                        new
                        {
                            PostId = new Guid("6e225a76-229f-4612-8520-7ce18e230152"),
                            TagId = new Guid("5a7a19b9-87a4-4c1e-a604-03ab852bf147")
                        },
                        new
                        {
                            PostId = new Guid("ac480306-36a8-4fdc-be3d-0779a3402df0"),
                            TagId = new Guid("eafbb60f-16cc-4e51-b625-c56cd0f5ea59")
                        },
                        new
                        {
                            PostId = new Guid("3b51d66c-87e9-4134-b036-11fa29157996"),
                            TagId = new Guid("c9824fd9-7476-400e-8d62-cead541be3a9")
                        },
                        new
                        {
                            PostId = new Guid("1ba7c717-adf8-4d71-82ba-9e0484c48be8"),
                            TagId = new Guid("0985c99a-dbf7-42a6-8bf8-a6ae829a7d2a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c95410e-3a37-427b-a687-3d7336ee8c18"),
                            Name = "Лижі"
                        },
                        new
                        {
                            Id = new Guid("5a7a19b9-87a4-4c1e-a604-03ab852bf147"),
                            Name = "Сноуборд"
                        },
                        new
                        {
                            Id = new Guid("eafbb60f-16cc-4e51-b625-c56cd0f5ea59"),
                            Name = "Настільні ігри"
                        },
                        new
                        {
                            Id = new Guid("c9824fd9-7476-400e-8d62-cead541be3a9"),
                            Name = "Велосипед"
                        },
                        new
                        {
                            Id = new Guid("0985c99a-dbf7-42a6-8bf8-a6ae829a7d2a"),
                            Name = "Кемпінг"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harrypotter@gmail.com",
                            FirstName = "Гаррі",
                            LastName = "Поттер",
                            Password = "eOQBuFXEVR27F+fO1rZTAw==;CIvUnVDJw74O/B7v3I73uXTHI7LDnEwsH7HtY6DNR70=",
                            PhoneNumber = "+38000000000",
                            Rating = 3.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatakae@gmail.com",
                            FirstName = "Еран",
                            LastName = "Єґа",
                            Password = "am/YEcqL6W1DvvwgF6ZLkw==;km2KMQcUJMwGs26yc79P1ATfSzcGlY+lYwEI5TApmM4=",
                            PhoneNumber = "+38000000000",
                            Rating = 1.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "killing.monsters@gmail.com",
                            FirstName = "Ґеральт",
                            LastName = "з Рівії",
                            Password = "B5V3oF3Bie6ujqA0qwimxg==;hsNLW7wpAHcXVR3AfVSxmNHoyzsKmbEPCYFQwNx+wFw=",
                            PhoneNumber = "+38000000000",
                            Rating = 4.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "not.exist@gmail.com",
                            FirstName = "Тайлер",
                            LastName = "Дьорден",
                            Password = "cl/umUCNr24kZBVQk2jIdw==;13tEiTYLasM3iiQRch7DYUdrkQRbqLHVlKhg6a2KLZU=",
                            PhoneNumber = "+38000000000",
                            Rating = 5.0m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bossofthegym@gmail.com",
                            FirstName = "Біллі",
                            LastName = "Герінґтон",
                            Password = "6XyouMDmiN5Gf3ygwVcsiw==;Tg/DFvUrAkjjc2zEjHFlyWccvkMqiFX0EYIQnqYcIU8=",
                            PhoneNumber = "+38000000000",
                            Rating = 2.5m,
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("407af047-9858-4321-afe0-69f3ca138a11"),
                            TagId = new Guid("9c95410e-3a37-427b-a687-3d7336ee8c18")
                        },
                        new
                        {
                            UserId = new Guid("444917de-1df8-494e-b019-628fd1c6b38a"),
                            TagId = new Guid("5a7a19b9-87a4-4c1e-a604-03ab852bf147")
                        },
                        new
                        {
                            UserId = new Guid("900c4c4a-18a7-4b6a-b490-515214e69b9a"),
                            TagId = new Guid("eafbb60f-16cc-4e51-b625-c56cd0f5ea59")
                        },
                        new
                        {
                            UserId = new Guid("1c1c6050-82fa-476a-a521-ceebf3634018"),
                            TagId = new Guid("c9824fd9-7476-400e-8d62-cead541be3a9")
                        },
                        new
                        {
                            UserId = new Guid("282d2df4-bcdc-4f5a-99b4-f83b995d5f72"),
                            TagId = new Guid("0985c99a-dbf7-42a6-8bf8-a6ae829a7d2a")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Comments")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Comments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("CommentsSended")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Favors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("FavorTags")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("FavorTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favor");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Images")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Images")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Likes")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Likes")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("LikesSended")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Comment");

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Parties")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyTags")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PartyTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyUsers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PartyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavorTags");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PartyTags");

                    b.Navigation("PartyUsers");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Navigation("FavorTags");

                    b.Navigation("PartyTags");

                    b.Navigation("PostTags");

                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsSended");

                    b.Navigation("Favors");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("LikesSended");

                    b.Navigation("Parties");

                    b.Navigation("PartyUsers");

                    b.Navigation("Posts");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
