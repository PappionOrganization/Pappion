// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappion.Infrastructure;

#nullable disable

namespace Pappion.Infrastructure.Migrations
{
    [DbContext(typeof(PappionDbContext))]
    partial class PappionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6b6b1e1-365f-43e3-8663-acc00a5582ee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("b6af4aa5-dbbc-4d47-93d1-2baabb526b31"),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            Text = "Увага! це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("9fc01311-b059-450e-ba20-4172083b5172"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("fc4b8cda-e695-4f24-9331-e409e4b7f82e"),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            Text = "Джакузі з скінхедом це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("a8942268-9c5e-43c1-a3a2-2f8852d8de9d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("ea733c0b-31a2-4ba0-919d-2f0195f653b2"),
                            Grade = 0m,
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            Text = "Масаж це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("0732b92a-3744-4a67-b351-7930fdb5b113"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            Text = "Гаррі це дуже файний пацан! Стоп...",
                            UserId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("a93192b3-5ed2-41fc-b9f0-3f37c9f3b284"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("abf7a0b8-aa0a-4f4b-956b-8ba602989450"),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            Text = "Незабутні враження від Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("a3dc469c-957e-4b0a-a090-b755ef5a142a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("73fa45fc-5820-4aaf-90dc-12e8114c0daa"),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("1786ff5c-d1a3-42e3-b065-66ccb8973b08"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("c24e030f-ecad-42a2-88eb-fdf055915c85"),
                            Grade = 0m,
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            Text = "Косметична процедура це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("b6d9021c-4823-48ae-9eb1-4623bfbf9617"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            Text = "Еран це дуже файний пацан! Стоп...",
                            UserId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("b1ad9e41-d3f6-4e4d-85cc-5718e06af9d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("4e3de5fd-37ec-4f34-b3b2-78b751979d2b"),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            Text = "Смаколики Карпатської кухні це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("71c1669f-e4d0-4f5b-92fa-a06e0f0fcb75"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("f6787cb8-98db-478a-a41e-ff3eab4c8567"),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            Text = "Вечірня прогулянка по місту це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("a7f51f5e-0486-4f37-b8cb-3a929ef75e3a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("e0446b0e-5fc2-4073-aad5-d69d9fa3fee4"),
                            Grade = 0m,
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            Text = "Персональний тренер це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("ded91049-12e1-404a-80d3-c39381d2e686"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            Text = "Ґеральт це дуже файний пацан! Стоп...",
                            UserId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("5a47a32e-a024-4c84-b307-18e419f901c8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("6a994f3e-ac89-432a-b0df-67904955f210"),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            Text = "Неймовірні пейзажі Карпат це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("e09ae5ed-5bc6-4125-a70e-76bd2ff7bed0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("f78c1d06-cef3-41c3-93b5-8c1a1f3507d4"),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            Text = "Вечірка вдома з настільними іграми це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("ab325bcb-9f32-4af8-a27b-af4a09e97e9d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("1eb82f43-27fd-4ec2-851d-fb67e7de5c25"),
                            Grade = 0m,
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            Text = "Ретельна манікюр і педикюр це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("78af6db4-8728-4d34-b821-29799c4f7eb4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            Text = "Тайлер це дуже файний пацан! Стоп...",
                            UserId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("749afb89-be73-4df3-bd81-f6dde0649635"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PostId = new Guid("14669a78-c727-4213-a339-c10d92eb35ad"),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            Text = "Зимові пригоди у Карпатах це дуже корисна публікація!"
                        },
                        new
                        {
                            Id = new Guid("1f2a6b57-7eb3-4fb3-852b-fc0cf0d0a1e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            PartyId = new Guid("c49f9cca-08b0-44d4-be6b-20903a9ce3e8"),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            Text = "Концерт Rammstein це звучить дуже цікаво! Я обов'язково прийду!"
                        },
                        new
                        {
                            Id = new Guid("54bbef9b-5943-491d-b13c-cbd33454e809"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("5af39064-8cd5-405b-8963-9922b9e67dd5"),
                            Grade = 0m,
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            Text = "Сеанс йоги це дуже крута послуга! Раджу всім спробувати!"
                        },
                        new
                        {
                            Id = new Guid("16739b73-11aa-4340-ba76-6dc08b996beb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0m,
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            Text = "Біллі це дуже файний пацан! Стоп...",
                            UserId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea733c0b-31a2-4ba0-919d-2f0195f653b2"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Найкращі майстри масажу готові показати всі свої вміння на вашій задубілій спині.",
                            Price = 50.5m,
                            Rating = 0m,
                            Title = "Масаж"
                        },
                        new
                        {
                            Id = new Guid("c24e030f-ecad-42a2-88eb-fdf055915c85"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Отримайте розкішну косметичну процедуру, яка підкреслить вашу природну красу і зробить вашу шкіру сяючою.",
                            Price = 80.0m,
                            Rating = 0m,
                            Title = "Косметична процедура"
                        },
                        new
                        {
                            Id = new Guid("e0446b0e-5fc2-4073-aad5-d69d9fa3fee4"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Досвідчений тренер допоможе вам досягнути ваших фітнес-цілей, розробивши індивідуальну тренувальну програму для вас.",
                            Price = 70.2m,
                            Rating = 0m,
                            Title = "Персональний тренер"
                        },
                        new
                        {
                            Id = new Guid("1eb82f43-27fd-4ec2-851d-fb67e7de5c25"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розкішний манікюр і педикюр, який зробить ваші нігті і ніжки неймовірно чудовими і доглянутими.",
                            Price = 45.8m,
                            Rating = 0m,
                            Title = "Ретельна манікюр і педикюр"
                        },
                        new
                        {
                            Id = new Guid("5af39064-8cd5-405b-8963-9922b9e67dd5"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Розслабтеся і зосередьтеся на своєму тілі та розумі під час особистого сеансу йоги з досвідченим інструктором.",
                            Price = 55.3m,
                            Rating = 0m,
                            Title = "Сеанс йоги"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.Property<Guid>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("FavorId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FavorTags");

                    b.HasData(
                        new
                        {
                            FavorId = new Guid("ea733c0b-31a2-4ba0-919d-2f0195f653b2"),
                            TagId = new Guid("b024c3d5-a1ab-4630-900f-79afbf709cb3")
                        },
                        new
                        {
                            FavorId = new Guid("c24e030f-ecad-42a2-88eb-fdf055915c85"),
                            TagId = new Guid("9b8ed1e5-4b48-4e70-a29d-f9cc65f388e1")
                        },
                        new
                        {
                            FavorId = new Guid("e0446b0e-5fc2-4073-aad5-d69d9fa3fee4"),
                            TagId = new Guid("d01427cf-e4ca-4d0d-95ba-906c0f80e767")
                        },
                        new
                        {
                            FavorId = new Guid("1eb82f43-27fd-4ec2-851d-fb67e7de5c25"),
                            TagId = new Guid("34ef5701-2bcd-4337-b1b8-fbb06e781b16")
                        },
                        new
                        {
                            FavorId = new Guid("5af39064-8cd5-405b-8963-9922b9e67dd5"),
                            TagId = new Guid("d34108aa-ca9b-4574-82f4-8294723be0d7")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("029c70f0-26c2-40a4-9ce6-ea191d415b1d"),
                            Path = "f5aa04fb-3728-458a-ba5a-7f325cccce19.png",
                            UserId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("a498c434-0abd-4c93-abe3-70e75e054592"),
                            Path = "0c1b87bd-9b75-499d-9896-6ec47560c873.png",
                            PostId = new Guid("b6af4aa5-dbbc-4d47-93d1-2baabb526b31")
                        },
                        new
                        {
                            Id = new Guid("0da85c61-1b60-4b85-82e5-5ccd1057211a"),
                            PartyId = new Guid("fc4b8cda-e695-4f24-9331-e409e4b7f82e"),
                            Path = "22c92514-31a7-4339-9017-d4bff80d820e.png"
                        },
                        new
                        {
                            Id = new Guid("66257386-ce38-4000-bf72-97a2aaec3071"),
                            FavorId = new Guid("ea733c0b-31a2-4ba0-919d-2f0195f653b2"),
                            Path = "0b2faaeb-0bf4-4570-a812-8e6294e40534.png"
                        },
                        new
                        {
                            Id = new Guid("fee7346f-4688-47b3-a99e-7901b8fa6095"),
                            Path = "0d9de09f-1761-45cf-a853-512702ef62da.png",
                            UserId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("0894268f-8f91-48ee-9a62-b65b418e686f"),
                            Path = "48fa117c-5e78-4023-83a3-505ef2a95c63.png",
                            PostId = new Guid("abf7a0b8-aa0a-4f4b-956b-8ba602989450")
                        },
                        new
                        {
                            Id = new Guid("1758b1cf-788b-471a-9b62-f59766b79650"),
                            PartyId = new Guid("73fa45fc-5820-4aaf-90dc-12e8114c0daa"),
                            Path = "c462665c-cd13-4627-9bed-a8ad0c879868.png"
                        },
                        new
                        {
                            Id = new Guid("8d182e87-028f-4a2d-91f5-5f7bfb78ff69"),
                            FavorId = new Guid("c24e030f-ecad-42a2-88eb-fdf055915c85"),
                            Path = "567b171b-8d02-47b7-bfd4-29cdb07ab6cd.png"
                        },
                        new
                        {
                            Id = new Guid("5842a663-fb06-416d-a389-93e4b0184881"),
                            Path = "d190d264-ec8c-45de-a25d-41fdb516c106.png",
                            UserId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("fbe0a462-f674-43d1-86f3-3fdd5a38443f"),
                            Path = "e59f8ff4-1d68-4ade-977a-fe4ea49254a5.png",
                            PostId = new Guid("4e3de5fd-37ec-4f34-b3b2-78b751979d2b")
                        },
                        new
                        {
                            Id = new Guid("1bb12964-bddd-4ec7-87f4-3d31c91f6805"),
                            PartyId = new Guid("f6787cb8-98db-478a-a41e-ff3eab4c8567"),
                            Path = "58a81253-338b-4037-89dc-2fcf3a501e0c.png"
                        },
                        new
                        {
                            Id = new Guid("e5e7f7d2-cedb-44aa-aa42-f4d9bc4b8cae"),
                            FavorId = new Guid("e0446b0e-5fc2-4073-aad5-d69d9fa3fee4"),
                            Path = "8b1b7e4d-8e2c-4494-abd7-ed888a971591.png"
                        },
                        new
                        {
                            Id = new Guid("73bc9113-9216-49c2-b440-673fad71e3e4"),
                            Path = "bf484494-5347-4635-a364-212e196cd062.png",
                            UserId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("cc9d5634-0f34-4ffe-aa12-630c273aef89"),
                            Path = "23eb78de-bb77-40a9-9955-df1d99737798.png",
                            PostId = new Guid("6a994f3e-ac89-432a-b0df-67904955f210")
                        },
                        new
                        {
                            Id = new Guid("aebe9fdc-138f-43d8-a2ff-e8caf566d9dd"),
                            PartyId = new Guid("f78c1d06-cef3-41c3-93b5-8c1a1f3507d4"),
                            Path = "5464f998-0081-46ff-a7ad-3561bcd48f58.png"
                        },
                        new
                        {
                            Id = new Guid("36dc2d84-66a7-4a14-8938-b7e51de01b10"),
                            FavorId = new Guid("1eb82f43-27fd-4ec2-851d-fb67e7de5c25"),
                            Path = "ff877f69-031f-4890-9eef-d4cc7d22043e.png"
                        },
                        new
                        {
                            Id = new Guid("6ff4b04e-086b-4357-9d6e-f31b8e597ec1"),
                            Path = "82328f74-0204-4c72-be30-404840c540b7.png",
                            UserId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        },
                        new
                        {
                            Id = new Guid("d169992a-96aa-4143-af80-9f91f140900b"),
                            Path = "27593490-8d6a-48b5-8457-42ba6f33d8a4.png",
                            PostId = new Guid("14669a78-c727-4213-a339-c10d92eb35ad")
                        },
                        new
                        {
                            Id = new Guid("f0b9f98d-1e02-4342-89e6-1c2aafe36ffb"),
                            PartyId = new Guid("c49f9cca-08b0-44d4-be6b-20903a9ce3e8"),
                            Path = "98cb879d-8a04-4b4f-867f-50e6952d40a5.png"
                        },
                        new
                        {
                            Id = new Guid("57a0674f-5e3e-4c37-a773-7218f0f316c5"),
                            FavorId = new Guid("5af39064-8cd5-405b-8963-9922b9e67dd5"),
                            Path = "1396e3e1-c31f-4812-9313-05a1d4dd8d50.png"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid?>("FavorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PostId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("553d3617-ede1-4bec-bf67-8e3647b05e5a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("b6af4aa5-dbbc-4d47-93d1-2baabb526b31"),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("b7ba6de5-9690-4a4f-b604-a5cb25ff4c5e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("ea733c0b-31a2-4ba0-919d-2f0195f653b2"),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("4cdf6e4a-543c-43eb-b143-cfca8b62bc51"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("fc4b8cda-e695-4f24-9331-e409e4b7f82e"),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("ed7b6f1e-bdf4-4abf-898f-8e578fd3340e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            UserId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("d60d3828-e35d-4d56-ac48-e2e43108db1a"),
                            CommentId = new Guid("d6b6b1e1-365f-43e3-8663-acc00a5582ee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            Id = new Guid("797d8145-5f93-482e-b470-410122ce25a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("abf7a0b8-aa0a-4f4b-956b-8ba602989450"),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("11518523-0cef-4c62-ad09-a61f528b3d0f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("c24e030f-ecad-42a2-88eb-fdf055915c85"),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("d896f60c-957b-45d6-9f09-2873e9716630"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("73fa45fc-5820-4aaf-90dc-12e8114c0daa"),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("f70e1399-bde9-417a-b3b3-7309670ad9b6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            UserId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("b8402999-e4d1-4171-ba05-c0e7687aaddd"),
                            CommentId = new Guid("9fc01311-b059-450e-ba20-4172083b5172"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            Id = new Guid("88319270-69a5-40a7-aeb0-6af41384e203"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("4e3de5fd-37ec-4f34-b3b2-78b751979d2b"),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("833f32f5-b457-4b69-8aad-e8b13a54e261"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("e0446b0e-5fc2-4073-aad5-d69d9fa3fee4"),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("46864050-bfdf-4a6d-998a-6447a8abd2e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("f6787cb8-98db-478a-a41e-ff3eab4c8567"),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("6c3c3405-5d08-4846-8ff2-4df75ac545b6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            UserId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("4fb33ccd-5f12-4e2d-a86e-ac6caabc65fe"),
                            CommentId = new Guid("a8942268-9c5e-43c1-a3a2-2f8852d8de9d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            Id = new Guid("f07bb104-0706-4d61-80a1-cbcb90d4558c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("6a994f3e-ac89-432a-b0df-67904955f210"),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("616c3587-e136-45cf-b33e-0b5dea170fde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("1eb82f43-27fd-4ec2-851d-fb67e7de5c25"),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("f50b2d6e-f8c2-4ede-aafe-99f7b15dec2f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("f78c1d06-cef3-41c3-93b5-8c1a1f3507d4"),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("2ad52621-7874-4099-8ded-6f0e4da30616"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            UserId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("328d22bd-0bf4-4960-a5bd-eddbbb356f13"),
                            CommentId = new Guid("0732b92a-3744-4a67-b351-7930fdb5b113"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            Id = new Guid("880467df-b8da-4cf0-a5fd-0267ee2ee0c4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = new Guid("14669a78-c727-4213-a339-c10d92eb35ad"),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        },
                        new
                        {
                            Id = new Guid("c4cdcc14-71ac-4922-9d28-a758954f89fc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FavorId = new Guid("5af39064-8cd5-405b-8963-9922b9e67dd5"),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        },
                        new
                        {
                            Id = new Guid("d99d8266-d0e2-48b3-9774-fd7874d3e922"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartyId = new Guid("c49f9cca-08b0-44d4-be6b-20903a9ce3e8"),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        },
                        new
                        {
                            Id = new Guid("e0b667fd-ed0d-4b03-a7d6-d972044d73e8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            UserId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        },
                        new
                        {
                            Id = new Guid("39735138-947b-4bc6-a438-f8366106b33f"),
                            CommentId = new Guid("a93192b3-5ed2-41fc-b9f0-3f37c9f3b284"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc4b8cda-e695-4f24-9331-e409e4b7f82e"),
                            AuthorId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7640),
                            Description = "Приходьте до мене сьогодні в джакузі, тут весело. Про оплату потім.",
                            Title = "Джакузі з скінхедом"
                        },
                        new
                        {
                            Id = new Guid("73fa45fc-5820-4aaf-90dc-12e8114c0daa"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7647),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("f6787cb8-98db-478a-a41e-ff3eab4c8567"),
                            AuthorId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7651),
                            Description = "Хто хоче приєднатися до мене для вечірньої прогулянки по красивому місту? Разом ми зможемо насолодитися видами, побалакати і провести час весело. Приходьте!",
                            Title = "Вечірня прогулянка по місту"
                        },
                        new
                        {
                            Id = new Guid("f78c1d06-cef3-41c3-93b5-8c1a1f3507d4"),
                            AuthorId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7655),
                            Description = "Хтось цікавиться проведенням вечірки вдома з настільними іграми? Я маю гарну колекцію ігор і шукаю компанію для веселого проведення вечора. Приєднуйтесь!",
                            Title = "Вечірка вдома з настільними іграми"
                        },
                        new
                        {
                            Id = new Guid("c49f9cca-08b0-44d4-be6b-20903a9ce3e8"),
                            AuthorId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7660),
                            Description = "Шукаю людей, які так само захоплені гуртом 'Rammstein' і хотіли б піти на їхній концерт. Разом буде набагато веселіше! Хто бажає долучитися?",
                            Title = "Концерт Rammstein"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PartyTags");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("fc4b8cda-e695-4f24-9331-e409e4b7f82e"),
                            TagId = new Guid("b024c3d5-a1ab-4630-900f-79afbf709cb3")
                        },
                        new
                        {
                            PartyId = new Guid("73fa45fc-5820-4aaf-90dc-12e8114c0daa"),
                            TagId = new Guid("9b8ed1e5-4b48-4e70-a29d-f9cc65f388e1")
                        },
                        new
                        {
                            PartyId = new Guid("f6787cb8-98db-478a-a41e-ff3eab4c8567"),
                            TagId = new Guid("d01427cf-e4ca-4d0d-95ba-906c0f80e767")
                        },
                        new
                        {
                            PartyId = new Guid("f78c1d06-cef3-41c3-93b5-8c1a1f3507d4"),
                            TagId = new Guid("34ef5701-2bcd-4337-b1b8-fbb06e781b16")
                        },
                        new
                        {
                            PartyId = new Guid("c49f9cca-08b0-44d4-be6b-20903a9ce3e8"),
                            TagId = new Guid("d34108aa-ca9b-4574-82f4-8294723be0d7")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PartyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PartyUsers");

                    b.HasData(
                        new
                        {
                            PartyId = new Guid("fc4b8cda-e695-4f24-9331-e409e4b7f82e"),
                            UserId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562")
                        },
                        new
                        {
                            PartyId = new Guid("73fa45fc-5820-4aaf-90dc-12e8114c0daa"),
                            UserId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788")
                        },
                        new
                        {
                            PartyId = new Guid("f6787cb8-98db-478a-a41e-ff3eab4c8567"),
                            UserId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b")
                        },
                        new
                        {
                            PartyId = new Guid("f78c1d06-cef3-41c3-93b5-8c1a1f3507d4"),
                            UserId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858")
                        },
                        new
                        {
                            PartyId = new Guid("c49f9cca-08b0-44d4-be6b-20903a9ce3e8"),
                            UserId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6af4aa5-dbbc-4d47-93d1-2baabb526b31"),
                            AuthorId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7542),
                            Description = "Карпати інфо шахраї! Я забронювала собі номер в одній з камер Азкабану, але дементори мене туди не впустили. Це жах!",
                            Title = "Увага!"
                        },
                        new
                        {
                            Id = new Guid("abf7a0b8-aa0a-4f4b-956b-8ba602989450"),
                            AuthorId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            CreatedDate = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7590),
                            Description = "Нещодавно повернулися з унікальної подорожі до Карпат і просто захоплюємося цим мальовничим куточком природи. Гірські ландшафти та заповідні ліси залишили незабутні враження в нашій пам'яті. Рекомендуємо всім любителям пригод відвідати цю частину України!",
                            Title = "Незабутні враження від Карпат"
                        },
                        new
                        {
                            Id = new Guid("4e3de5fd-37ec-4f34-b3b2-78b751979d2b"),
                            AuthorId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            CreatedDate = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7595),
                            Description = "Під час нашої поїздки в Карпати ми не лише насолоджувалися природою, але й смакували справжні кулінарні шедеври. Місцеві страви, такі як вершкові гриби та банош, просто вражають своїм неповторним смаком. Рекомендуємо спробувати!",
                            Title = "Смаколики Карпатської кухні"
                        },
                        new
                        {
                            Id = new Guid("6a994f3e-ac89-432a-b0df-67904955f210"),
                            AuthorId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            CreatedDate = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7603),
                            Description = "Під час наших пішохідних прогулянок по Карпатах ми були просто зачаровані мальовничими пейзажами, які відкривалися перед нами. Гірські потоки, зелені луки та красиві гори - все це створює незабутню атмосферу та надихає на нові відкриття. Рекомендуємо це місце для всіх любителів активного відпочинку та красивої природи!",
                            Title = "Неймовірні пейзажі Карпат"
                        },
                        new
                        {
                            Id = new Guid("14669a78-c727-4213-a339-c10d92eb35ad"),
                            AuthorId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            CreatedDate = new DateTime(2023, 6, 18, 12, 14, 21, 211, DateTimeKind.Local).AddTicks(7608),
                            Description = "Наша зимова подорож до Карпат принесла нам незабутні враження від катання на лижах. Добре обладнані гірськолижні курорти та різноманітні траси задовольнять навіть найвибагливіших любителів лижного спорту. Насолоджуйтесь зимовими пригодами у Карпатах!",
                            Title = "Зимові пригоди у Карпатах"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("b6af4aa5-dbbc-4d47-93d1-2baabb526b31"),
                            TagId = new Guid("b024c3d5-a1ab-4630-900f-79afbf709cb3")
                        },
                        new
                        {
                            PostId = new Guid("abf7a0b8-aa0a-4f4b-956b-8ba602989450"),
                            TagId = new Guid("9b8ed1e5-4b48-4e70-a29d-f9cc65f388e1")
                        },
                        new
                        {
                            PostId = new Guid("4e3de5fd-37ec-4f34-b3b2-78b751979d2b"),
                            TagId = new Guid("d01427cf-e4ca-4d0d-95ba-906c0f80e767")
                        },
                        new
                        {
                            PostId = new Guid("6a994f3e-ac89-432a-b0df-67904955f210"),
                            TagId = new Guid("34ef5701-2bcd-4337-b1b8-fbb06e781b16")
                        },
                        new
                        {
                            PostId = new Guid("14669a78-c727-4213-a339-c10d92eb35ad"),
                            TagId = new Guid("d34108aa-ca9b-4574-82f4-8294723be0d7")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b024c3d5-a1ab-4630-900f-79afbf709cb3"),
                            Name = "Лижі"
                        },
                        new
                        {
                            Id = new Guid("9b8ed1e5-4b48-4e70-a29d-f9cc65f388e1"),
                            Name = "Сноуборд"
                        },
                        new
                        {
                            Id = new Guid("d01427cf-e4ca-4d0d-95ba-906c0f80e767"),
                            Name = "Настільні ігри"
                        },
                        new
                        {
                            Id = new Guid("34ef5701-2bcd-4337-b1b8-fbb06e781b16"),
                            Name = "Велосипед"
                        },
                        new
                        {
                            Id = new Guid("d34108aa-ca9b-4574-82f4-8294723be0d7"),
                            Name = "Кемпінг"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harrypotter@gmail.com",
                            FirstName = "Гаррі",
                            LastName = "Поттер",
                            Password = "tXm0TjNIlr5po0NIviID2Q==;jNCDzquD8OyceNy/uwcRtc1d5+V4Z84/ecnbkip7Uhk=",
                            PhoneNumber = "+38000000000",
                            Rating = 3.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatakae@gmail.com",
                            FirstName = "Еран",
                            LastName = "Єґа",
                            Password = "tEoHiwdHo6BQ+Ied6f5NxQ==;TgmmgiTVYfBXdsDkHsXsBt/A5XthSOkO5RJKUtKJONk=",
                            PhoneNumber = "+38000000000",
                            Rating = 1.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "killing.monsters@gmail.com",
                            FirstName = "Ґеральт",
                            LastName = "з Рівії",
                            Password = "AnJvYXLCFviKopQBQDKbfQ==;cr6btLx8eFNP88Mfe1DcaS5V5a8/MX5ab/hJweSWKk4=",
                            PhoneNumber = "+38000000000",
                            Rating = 4.5m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "not.exist@gmail.com",
                            FirstName = "Тайлер",
                            LastName = "Дьорден",
                            Password = "RQXOvYMwUKS37hagysdqPQ==;tKW68EMW1O2re2CfRAZQyDBj8t0JfgYJ1B69oCvhCys=",
                            PhoneNumber = "+38000000000",
                            Rating = 5.0m,
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bossofthegym@gmail.com",
                            FirstName = "Біллі",
                            LastName = "Герінґтон",
                            Password = "leK67VXLpIsafT+E0jkjIQ==;OQK/5Lv6P4ZIENr3QmDdknUiDpn9Lo+4OWA2WCypcvQ=",
                            PhoneNumber = "+38000000000",
                            Rating = 2.5m,
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a6e85327-e4ec-4736-85d1-d44814863562"),
                            TagId = new Guid("b024c3d5-a1ab-4630-900f-79afbf709cb3")
                        },
                        new
                        {
                            UserId = new Guid("8dd930b8-9985-4297-9286-2c6cfb93e788"),
                            TagId = new Guid("9b8ed1e5-4b48-4e70-a29d-f9cc65f388e1")
                        },
                        new
                        {
                            UserId = new Guid("03138389-2fd2-47af-a9a1-db59c518972b"),
                            TagId = new Guid("d01427cf-e4ca-4d0d-95ba-906c0f80e767")
                        },
                        new
                        {
                            UserId = new Guid("da32bf83-8fdb-4405-bc80-be732443e858"),
                            TagId = new Guid("34ef5701-2bcd-4337-b1b8-fbb06e781b16")
                        },
                        new
                        {
                            UserId = new Guid("c80587d6-356d-4b63-a1d1-02ea9c6d97f4"),
                            TagId = new Guid("d34108aa-ca9b-4574-82f4-8294723be0d7")
                        });
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Comments")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Comments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("CommentsSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Favors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.FavorTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("FavorTags")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("FavorTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favor");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Image", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Images")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Images")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithOne("Image")
                        .HasForeignKey("Pappion.Domain.Entities.Image", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Like", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Favor", "Favor")
                        .WithMany("Likes")
                        .HasForeignKey("FavorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("Likes")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "Sender")
                        .WithMany("LikesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Comment");

                    b.Navigation("Favor");

                    b.Navigation("Party");

                    b.Navigation("Post");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Parties")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyTags")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PartyTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PartyUsers", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Party", "Party")
                        .WithMany("PartyUsers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("PartyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.UserTags", b =>
                {
                    b.HasOne("Pappion.Domain.Entities.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pappion.Domain.Entities.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Favor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavorTags");

                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Party", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PartyTags");

                    b.Navigation("PartyUsers");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.Tag", b =>
                {
                    b.Navigation("FavorTags");

                    b.Navigation("PartyTags");

                    b.Navigation("PostTags");

                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("Pappion.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsSent");

                    b.Navigation("Favors");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Likes");

                    b.Navigation("LikesSent");

                    b.Navigation("Parties");

                    b.Navigation("PartyUsers");

                    b.Navigation("Posts");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
